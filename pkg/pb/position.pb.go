// Code generated by protoc-gen-go. DO NOT EDIT.
// source: position.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 持仓统计
type PositionSummation struct {
	// 方向
	Direction int32 `protobuf:"varint,1,opt,name=direction,proto3" json:"direction"`
	// 类型
	Type int32 `protobuf:"varint,2,opt,name=type,proto3" json:"type"`
	// 路由分组
	RouteAccount string `protobuf:"bytes,3,opt,name=route_account,json=routeAccount,proto3" json:"routeAccount"`
	// 持仓
	Position int32 `protobuf:"varint,4,opt,name=position,proto3" json:"position"`
	// 金额
	Amount float64 `protobuf:"fixed64,5,opt,name=amount,proto3" json:"amount"`
	// 成本
	Cost float64 `protobuf:"fixed64,6,opt,name=cost,proto3" json:"cost"`
	// 冻结
	Frozen int32 `protobuf:"varint,7,opt,name=frozen,proto3" json:"frozen"`
	// 可用
	Available int32 `protobuf:"varint,8,opt,name=available,proto3" json:"available"`
	// 盈亏
	PositionProfit float64 `protobuf:"fixed64,9,opt,name=position_profit,json=positionProfit,proto3" json:"positionProfit"`
	// 平盈
	ClosedProfit float64 `protobuf:"fixed64,10,opt,name=closed_profit,json=closedProfit,proto3" json:"closedProfit"`
	// 保证金
	Margin float64 `protobuf:"fixed64,11,opt,name=margin,proto3" json:"margin"`
	// 冻结保证金
	FrozenMargin float64 `protobuf:"fixed64,12,opt,name=frozen_margin,json=frozenMargin,proto3" json:"frozenMargin"`
	// 手续费
	Commission float64 `protobuf:"fixed64,13,opt,name=commission,proto3" json:"commission"`
	// 冻结手续费
	FrozenCommission float64 `protobuf:"fixed64,14,opt,name=frozen_commission,json=frozenCommission,proto3" json:"frozenCommission"`
	// 利息
	Interest float64 `protobuf:"fixed64,15,opt,name=interest,proto3" json:"interest"`
	// 冻结利息
	FrozenInterest float64 `protobuf:"fixed64,16,opt,name=frozen_interest,json=frozenInterest,proto3" json:"frozenInterest"`
	// 盯市盈亏
	MtmProfit float64 `protobuf:"fixed64,17,opt,name=mtm_profit,json=mtmProfit,proto3" json:"mtmProfit"`
	// 进入清算的平仓盈亏
	ClearedClosedProfit float64 `protobuf:"fixed64,18,opt,name=cleared_closed_profit,json=clearedClosedProfit,proto3" json:"clearedClosedProfit"`
	// 印花税
	StampTax float64 `protobuf:"fixed64,19,opt,name=stamp_tax,json=stampTax,proto3" json:"stampTax"`
	// 过户费
	TransferFee float64 `protobuf:"fixed64,20,opt,name=transfer_fee,json=transferFee,proto3" json:"transferFee"`
	// 部门
	Branch string `protobuf:"bytes,21,opt,name=branch,proto3" json:"branch"`
	// 部门名称
	BranchName           string   `protobuf:"bytes,22,opt,name=branch_name,json=branchName,proto3" json:"branchName"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PositionSummation) Reset()         { *m = PositionSummation{} }
func (m *PositionSummation) String() string { return proto.CompactTextString(m) }
func (*PositionSummation) ProtoMessage()    {}
func (*PositionSummation) Descriptor() ([]byte, []int) {
	return fileDescriptor_56e266f1a28a7893, []int{0}
}

func (m *PositionSummation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PositionSummation.Unmarshal(m, b)
}
func (m *PositionSummation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PositionSummation.Marshal(b, m, deterministic)
}
func (m *PositionSummation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PositionSummation.Merge(m, src)
}
func (m *PositionSummation) XXX_Size() int {
	return xxx_messageInfo_PositionSummation.Size(m)
}
func (m *PositionSummation) XXX_DiscardUnknown() {
	xxx_messageInfo_PositionSummation.DiscardUnknown(m)
}

var xxx_messageInfo_PositionSummation proto.InternalMessageInfo

func (m *PositionSummation) GetDirection() int32 {
	if m != nil {
		return m.Direction
	}
	return 0
}

func (m *PositionSummation) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *PositionSummation) GetRouteAccount() string {
	if m != nil {
		return m.RouteAccount
	}
	return ""
}

func (m *PositionSummation) GetPosition() int32 {
	if m != nil {
		return m.Position
	}
	return 0
}

func (m *PositionSummation) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *PositionSummation) GetCost() float64 {
	if m != nil {
		return m.Cost
	}
	return 0
}

func (m *PositionSummation) GetFrozen() int32 {
	if m != nil {
		return m.Frozen
	}
	return 0
}

func (m *PositionSummation) GetAvailable() int32 {
	if m != nil {
		return m.Available
	}
	return 0
}

func (m *PositionSummation) GetPositionProfit() float64 {
	if m != nil {
		return m.PositionProfit
	}
	return 0
}

func (m *PositionSummation) GetClosedProfit() float64 {
	if m != nil {
		return m.ClosedProfit
	}
	return 0
}

func (m *PositionSummation) GetMargin() float64 {
	if m != nil {
		return m.Margin
	}
	return 0
}

func (m *PositionSummation) GetFrozenMargin() float64 {
	if m != nil {
		return m.FrozenMargin
	}
	return 0
}

func (m *PositionSummation) GetCommission() float64 {
	if m != nil {
		return m.Commission
	}
	return 0
}

func (m *PositionSummation) GetFrozenCommission() float64 {
	if m != nil {
		return m.FrozenCommission
	}
	return 0
}

func (m *PositionSummation) GetInterest() float64 {
	if m != nil {
		return m.Interest
	}
	return 0
}

func (m *PositionSummation) GetFrozenInterest() float64 {
	if m != nil {
		return m.FrozenInterest
	}
	return 0
}

func (m *PositionSummation) GetMtmProfit() float64 {
	if m != nil {
		return m.MtmProfit
	}
	return 0
}

func (m *PositionSummation) GetClearedClosedProfit() float64 {
	if m != nil {
		return m.ClearedClosedProfit
	}
	return 0
}

func (m *PositionSummation) GetStampTax() float64 {
	if m != nil {
		return m.StampTax
	}
	return 0
}

func (m *PositionSummation) GetTransferFee() float64 {
	if m != nil {
		return m.TransferFee
	}
	return 0
}

func (m *PositionSummation) GetBranch() string {
	if m != nil {
		return m.Branch
	}
	return ""
}

func (m *PositionSummation) GetBranchName() string {
	if m != nil {
		return m.BranchName
	}
	return ""
}

// 持仓
type Position struct {
	/// 合约编号
	Symbol *Symbol `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol"`
	// 统计
	Summation *PositionSummation `protobuf:"bytes,2,opt,name=summation,proto3" json:"summation"`
	// 今仓
	TodaySummation *PositionSummation `protobuf:"bytes,3,opt,name=today_summation,json=todaySummation,proto3" json:"todaySummation"`
	// 今仓
	YesterdaySummation *PositionSummation `protobuf:"bytes,4,opt,name=yesterday_summation,json=yesterdaySummation,proto3" json:"yesterdaySummation"`
	// 昨结算
	PreSettlementPrice float64 `protobuf:"fixed64,5,opt,name=pre_settlement_price,json=preSettlementPrice,proto3" json:"preSettlementPrice"`
	// 今结算
	SettlementPrice float64 `protobuf:"fixed64,6,opt,name=settlement_price,json=settlementPrice,proto3" json:"settlementPrice"`
	// 最新价
	LastPrice float64 `protobuf:"fixed64,7,opt,name=last_price,json=lastPrice,proto3" json:"lastPrice"`
	// 交易日
	TradingDay int32 `protobuf:"varint,8,opt,name=trading_day,json=tradingDay,proto3" json:"tradingDay"`
	// 交易品种类型
	ProductType int32 `protobuf:"varint,9,opt,name=product_type,json=productType,proto3" json:"productType"`
	// 结算组
	SettlementGroup int32 `protobuf:"varint,10,opt,name=settlement_group,json=settlementGroup,proto3" json:"settlementGroup"`
	// 合约乘数
	VolumeMultiple int32 `protobuf:"varint,11,opt,name=volume_multiple,json=volumeMultiple,proto3" json:"volumeMultiple"`
	// 产品
	ProductId *ProductID `protobuf:"bytes,12,opt,name=product_id,json=productId,proto3" json:"productId"`
	// 最小变动价位
	PriceTick float64 `protobuf:"fixed64,13,opt,name=price_tick,json=priceTick,proto3" json:"priceTick"`
	// 名称
	SymbolName string `protobuf:"bytes,14,opt,name=symbol_name,json=symbolName,proto3" json:"symbolName"`
	// 账号
	Account string `protobuf:"bytes,15,opt,name=account,proto3" json:"account"`
	// 账号名
	AccountName string `protobuf:"bytes,16,opt,name=account_name,json=accountName,proto3" json:"accountName"`
	// 公司
	Company int64 `protobuf:"varint,17,opt,name=company,proto3" json:"company"`
	// 代理
	Branch string `protobuf:"bytes,18,opt,name=branch,proto3" json:"branch"`
	// 到期日
	ExpireDate int32 `protobuf:"varint,19,opt,name=expire_date,json=expireDate,proto3" json:"expireDate"`
	// 部门名称
	BranchName string `protobuf:"bytes,20,opt,name=branch_name,json=branchName,proto3" json:"branchName"`
	// 是否允许平今
	IsCloseTodayAllowed bool `protobuf:"varint,21,opt,name=is_close_today_allowed,json=isCloseTodayAllowed,proto3" json:"isCloseTodayAllowed"`
	// 用户
	User string `protobuf:"bytes,22,opt,name=user,proto3" json:"user"`
	// 用户名
	UserName             string   `protobuf:"bytes,23,opt,name=user_name,json=userName,proto3" json:"userName"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Position) Reset()         { *m = Position{} }
func (m *Position) String() string { return proto.CompactTextString(m) }
func (*Position) ProtoMessage()    {}
func (*Position) Descriptor() ([]byte, []int) {
	return fileDescriptor_56e266f1a28a7893, []int{1}
}

func (m *Position) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Position.Unmarshal(m, b)
}
func (m *Position) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Position.Marshal(b, m, deterministic)
}
func (m *Position) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Position.Merge(m, src)
}
func (m *Position) XXX_Size() int {
	return xxx_messageInfo_Position.Size(m)
}
func (m *Position) XXX_DiscardUnknown() {
	xxx_messageInfo_Position.DiscardUnknown(m)
}

var xxx_messageInfo_Position proto.InternalMessageInfo

func (m *Position) GetSymbol() *Symbol {
	if m != nil {
		return m.Symbol
	}
	return nil
}

func (m *Position) GetSummation() *PositionSummation {
	if m != nil {
		return m.Summation
	}
	return nil
}

func (m *Position) GetTodaySummation() *PositionSummation {
	if m != nil {
		return m.TodaySummation
	}
	return nil
}

func (m *Position) GetYesterdaySummation() *PositionSummation {
	if m != nil {
		return m.YesterdaySummation
	}
	return nil
}

func (m *Position) GetPreSettlementPrice() float64 {
	if m != nil {
		return m.PreSettlementPrice
	}
	return 0
}

func (m *Position) GetSettlementPrice() float64 {
	if m != nil {
		return m.SettlementPrice
	}
	return 0
}

func (m *Position) GetLastPrice() float64 {
	if m != nil {
		return m.LastPrice
	}
	return 0
}

func (m *Position) GetTradingDay() int32 {
	if m != nil {
		return m.TradingDay
	}
	return 0
}

func (m *Position) GetProductType() int32 {
	if m != nil {
		return m.ProductType
	}
	return 0
}

func (m *Position) GetSettlementGroup() int32 {
	if m != nil {
		return m.SettlementGroup
	}
	return 0
}

func (m *Position) GetVolumeMultiple() int32 {
	if m != nil {
		return m.VolumeMultiple
	}
	return 0
}

func (m *Position) GetProductId() *ProductID {
	if m != nil {
		return m.ProductId
	}
	return nil
}

func (m *Position) GetPriceTick() float64 {
	if m != nil {
		return m.PriceTick
	}
	return 0
}

func (m *Position) GetSymbolName() string {
	if m != nil {
		return m.SymbolName
	}
	return ""
}

func (m *Position) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *Position) GetAccountName() string {
	if m != nil {
		return m.AccountName
	}
	return ""
}

func (m *Position) GetCompany() int64 {
	if m != nil {
		return m.Company
	}
	return 0
}

func (m *Position) GetBranch() string {
	if m != nil {
		return m.Branch
	}
	return ""
}

func (m *Position) GetExpireDate() int32 {
	if m != nil {
		return m.ExpireDate
	}
	return 0
}

func (m *Position) GetBranchName() string {
	if m != nil {
		return m.BranchName
	}
	return ""
}

func (m *Position) GetIsCloseTodayAllowed() bool {
	if m != nil {
		return m.IsCloseTodayAllowed
	}
	return false
}

func (m *Position) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Position) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

type PositionList struct {
	List                 []*Position `protobuf:"bytes,1,rep,name=list,proto3" json:"list"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PositionList) Reset()         { *m = PositionList{} }
func (m *PositionList) String() string { return proto.CompactTextString(m) }
func (*PositionList) ProtoMessage()    {}
func (*PositionList) Descriptor() ([]byte, []int) {
	return fileDescriptor_56e266f1a28a7893, []int{2}
}

func (m *PositionList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PositionList.Unmarshal(m, b)
}
func (m *PositionList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PositionList.Marshal(b, m, deterministic)
}
func (m *PositionList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PositionList.Merge(m, src)
}
func (m *PositionList) XXX_Size() int {
	return xxx_messageInfo_PositionList.Size(m)
}
func (m *PositionList) XXX_DiscardUnknown() {
	xxx_messageInfo_PositionList.DiscardUnknown(m)
}

var xxx_messageInfo_PositionList proto.InternalMessageInfo

func (m *PositionList) GetList() []*Position {
	if m != nil {
		return m.List
	}
	return nil
}

// 强平
type ReqForceClosePosition struct {
	User                 string         `protobuf:"bytes,1,opt,name=user,proto3" json:"user"`
	Symbol               *Symbol        `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol"`
	Direction            OrderDirection `protobuf:"varint,3,opt,name=direction,proto3,enum=pb.OrderDirection" json:"direction"`
	Price                float64        `protobuf:"fixed64,4,opt,name=price,proto3" json:"price"`
	Volume               int32          `protobuf:"varint,5,opt,name=volume,proto3" json:"volume"`
	Account              string         `protobuf:"bytes,6,opt,name=account,proto3" json:"account"`
	Repurchase           bool           `protobuf:"varint,7,opt,name=repurchase,proto3" json:"repurchase"`
	Comment              string         `protobuf:"bytes,8,opt,name=comment,proto3" json:"comment"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ReqForceClosePosition) Reset()         { *m = ReqForceClosePosition{} }
func (m *ReqForceClosePosition) String() string { return proto.CompactTextString(m) }
func (*ReqForceClosePosition) ProtoMessage()    {}
func (*ReqForceClosePosition) Descriptor() ([]byte, []int) {
	return fileDescriptor_56e266f1a28a7893, []int{3}
}

func (m *ReqForceClosePosition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqForceClosePosition.Unmarshal(m, b)
}
func (m *ReqForceClosePosition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqForceClosePosition.Marshal(b, m, deterministic)
}
func (m *ReqForceClosePosition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqForceClosePosition.Merge(m, src)
}
func (m *ReqForceClosePosition) XXX_Size() int {
	return xxx_messageInfo_ReqForceClosePosition.Size(m)
}
func (m *ReqForceClosePosition) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqForceClosePosition.DiscardUnknown(m)
}

var xxx_messageInfo_ReqForceClosePosition proto.InternalMessageInfo

func (m *ReqForceClosePosition) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *ReqForceClosePosition) GetSymbol() *Symbol {
	if m != nil {
		return m.Symbol
	}
	return nil
}

func (m *ReqForceClosePosition) GetDirection() OrderDirection {
	if m != nil {
		return m.Direction
	}
	return OrderDirection_OD_LONG
}

func (m *ReqForceClosePosition) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *ReqForceClosePosition) GetVolume() int32 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *ReqForceClosePosition) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *ReqForceClosePosition) GetRepurchase() bool {
	if m != nil {
		return m.Repurchase
	}
	return false
}

func (m *ReqForceClosePosition) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func init() {
	proto.RegisterType((*PositionSummation)(nil), "pb.PositionSummation")
	proto.RegisterType((*Position)(nil), "pb.Position")
	proto.RegisterType((*PositionList)(nil), "pb.PositionList")
	proto.RegisterType((*ReqForceClosePosition)(nil), "pb.ReqForceClosePosition")
}

func init() { proto.RegisterFile("position.proto", fileDescriptor_56e266f1a28a7893) }

var fileDescriptor_56e266f1a28a7893 = []byte{
	// 901 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x55, 0xdf, 0x4f, 0x23, 0x37,
	0x10, 0x56, 0x20, 0x09, 0xd9, 0xd9, 0x90, 0x80, 0xf9, 0xd1, 0x15, 0xed, 0xdd, 0xa5, 0xf4, 0xa1,
	0x54, 0xad, 0x10, 0x0a, 0xef, 0x95, 0x4e, 0x87, 0xa8, 0x90, 0x7a, 0x2d, 0x5a, 0x78, 0x5f, 0x39,
	0xbb, 0x03, 0x67, 0xdd, 0x7a, 0xbd, 0xb5, 0x9d, 0x2b, 0xe9, 0x6b, 0xfb, 0x0f, 0xf6, 0x3f, 0xaa,
	0x3c, 0xb6, 0x93, 0x85, 0x53, 0xef, 0x29, 0x9e, 0x6f, 0xbe, 0xb1, 0x67, 0xec, 0xef, 0xcb, 0xc2,
	0xa4, 0x55, 0x46, 0x58, 0xa1, 0x9a, 0xf3, 0x56, 0x2b, 0xab, 0xd8, 0x56, 0xbb, 0x38, 0x19, 0x97,
	0x4a, 0xca, 0x88, 0x9c, 0xa4, 0x4a, 0x57, 0xa8, 0x7d, 0x70, 0xfa, 0xef, 0x00, 0xf6, 0x6f, 0x43,
	0xc5, 0xdd, 0x52, 0x4a, 0xee, 0x16, 0xec, 0x1b, 0x48, 0x2a, 0xa1, 0xb1, 0x74, 0x41, 0xd6, 0x9b,
	0xf5, 0xce, 0x06, 0xf9, 0x06, 0x60, 0x0c, 0xfa, 0x76, 0xd5, 0x62, 0xb6, 0x45, 0x09, 0x5a, 0xb3,
	0xef, 0x60, 0x57, 0xab, 0xa5, 0xc5, 0x82, 0x97, 0xa5, 0x5a, 0x36, 0x36, 0xdb, 0x9e, 0xf5, 0xce,
	0x92, 0x7c, 0x4c, 0xe0, 0x5b, 0x8f, 0xb1, 0x13, 0x18, 0xc5, 0xee, 0xb2, 0x3e, 0x15, 0xaf, 0x63,
	0x76, 0x0c, 0x43, 0x2e, 0xa9, 0x72, 0x30, 0xeb, 0x9d, 0xf5, 0xf2, 0x10, 0xb9, 0xc3, 0x4a, 0x65,
	0x6c, 0x36, 0x24, 0x94, 0xd6, 0x8e, 0xfb, 0xa0, 0xd5, 0x5f, 0xd8, 0x64, 0x3b, 0xb4, 0x4b, 0x88,
	0x5c, 0xdb, 0xfc, 0x13, 0x17, 0x35, 0x5f, 0xd4, 0x98, 0x8d, 0x7c, 0xdb, 0x6b, 0x80, 0x7d, 0x0f,
	0xd3, 0x78, 0x5a, 0xd1, 0x6a, 0xf5, 0x20, 0x6c, 0x96, 0xd0, 0xa6, 0xeb, 0x2b, 0xbb, 0x25, 0xd4,
	0xcd, 0x52, 0xd6, 0xca, 0x60, 0x15, 0x69, 0x40, 0xb4, 0xb1, 0x07, 0x03, 0xe9, 0x18, 0x86, 0x92,
	0xeb, 0x47, 0xd1, 0x64, 0xa9, 0xef, 0xd7, 0x47, 0xae, 0xd8, 0x77, 0x53, 0x84, 0xf4, 0xd8, 0x17,
	0x7b, 0xf0, 0xbd, 0x27, 0xbd, 0x06, 0x70, 0x4f, 0x22, 0x8c, 0x71, 0x57, 0xb1, 0x4b, 0x8c, 0x0e,
	0xc2, 0x7e, 0x84, 0xfd, 0xb0, 0x49, 0x87, 0x36, 0x21, 0xda, 0x9e, 0x4f, 0xbc, 0xdb, 0x90, 0x4f,
	0x60, 0x24, 0x1a, 0x8b, 0x1a, 0x8d, 0xcd, 0xa6, 0xc4, 0x59, 0xc7, 0x6e, 0xe6, 0xb0, 0xd1, 0x9a,
	0xb2, 0xe7, 0x67, 0xf6, 0xf0, 0x4d, 0x24, 0xbe, 0x02, 0x90, 0x56, 0xc6, 0x81, 0xf7, 0x89, 0x93,
	0x48, 0x2b, 0xc3, 0xb4, 0x73, 0x38, 0x2a, 0x6b, 0xe4, 0x1a, 0xab, 0xe2, 0xf9, 0xd5, 0x30, 0x62,
	0x1e, 0x84, 0xe4, 0xbb, 0xee, 0x0d, 0x7d, 0x0d, 0x89, 0xb1, 0x5c, 0xb6, 0x85, 0xe5, 0x4f, 0xd9,
	0x81, 0x6f, 0x8c, 0x80, 0x7b, 0xfe, 0xc4, 0xbe, 0x85, 0xb1, 0xd5, 0xbc, 0x31, 0x0f, 0xa8, 0x8b,
	0x07, 0xc4, 0xec, 0x90, 0xf2, 0x69, 0xc4, 0xae, 0x11, 0xdd, 0x0d, 0x2f, 0x34, 0x6f, 0xca, 0x0f,
	0xd9, 0x11, 0x69, 0x29, 0x44, 0xec, 0x0d, 0xa4, 0x7e, 0x55, 0x34, 0x5c, 0x62, 0x76, 0x4c, 0x49,
	0xf0, 0xd0, 0x6f, 0x5c, 0xe2, 0xe9, 0x3f, 0x3b, 0x30, 0x8a, 0x9a, 0x66, 0xa7, 0x30, 0x34, 0x2b,
	0xb9, 0x50, 0x35, 0xe9, 0x38, 0x9d, 0xc3, 0x79, 0xbb, 0x38, 0xbf, 0x23, 0x24, 0x0f, 0x19, 0x76,
	0x09, 0x89, 0x89, 0xda, 0x27, 0x55, 0xa7, 0xf3, 0x23, 0x47, 0xfb, 0xcc, 0x18, 0xf9, 0x86, 0xc7,
	0x7e, 0x86, 0xa9, 0x55, 0x15, 0x5f, 0x15, 0x9b, 0xd2, 0xed, 0x2f, 0x95, 0x4e, 0x88, 0xbd, 0xf1,
	0xd8, 0x35, 0x1c, 0xac, 0xd0, 0x58, 0xd4, 0xcf, 0xf7, 0xe8, 0x7f, 0x69, 0x0f, 0xb6, 0xae, 0xd8,
	0xec, 0x73, 0x01, 0x87, 0xad, 0xc6, 0xc2, 0xa0, 0xb5, 0x35, 0x4a, 0x6c, 0x6c, 0xd1, 0x6a, 0x51,
	0x62, 0xb0, 0x11, 0x6b, 0x35, 0xde, 0xad, 0x53, 0xb7, 0x2e, 0xc3, 0x7e, 0x80, 0xbd, 0xcf, 0xd8,
	0xde, 0x5e, 0x53, 0xf3, 0x82, 0xfa, 0x0a, 0xa0, 0xe6, 0x26, 0x92, 0x76, 0xbc, 0x2c, 0x1c, 0xe2,
	0xd3, 0x6f, 0xc0, 0xbd, 0x58, 0x25, 0x9a, 0xc7, 0xa2, 0xe2, 0xab, 0x60, 0x39, 0x08, 0xd0, 0x15,
	0x5f, 0xb9, 0x67, 0x6e, 0xb5, 0xaa, 0x96, 0xa5, 0x2d, 0xe8, 0x2f, 0x23, 0x21, 0x46, 0x1a, 0xb0,
	0x7b, 0xf7, 0xcf, 0xf1, 0xbc, 0x9b, 0x47, 0xad, 0x96, 0x2d, 0x19, 0x6e, 0xd0, 0xed, 0xe6, 0x17,
	0x07, 0x3b, 0x35, 0x7f, 0x52, 0xf5, 0x52, 0x62, 0x21, 0x97, 0xb5, 0x15, 0x6d, 0x8d, 0x64, 0xbe,
	0x41, 0x3e, 0xf1, 0xf0, 0xfb, 0x80, 0xb2, 0x9f, 0x00, 0xe2, 0xb1, 0xa2, 0x22, 0x07, 0xa6, 0xf3,
	0x5d, 0xba, 0x52, 0x8f, 0xde, 0x5c, 0xe5, 0x49, 0x20, 0xdc, 0x54, 0x6e, 0x48, 0x9a, 0xaf, 0xb0,
	0xa2, 0xfc, 0x18, 0xdc, 0x98, 0x10, 0x72, 0x2f, 0xca, 0x8f, 0x6e, 0x48, 0xaf, 0x13, 0xaf, 0xb7,
	0x89, 0xd7, 0x9b, 0x87, 0x9c, 0xde, 0x58, 0x06, 0x3b, 0xf1, 0x5f, 0x6f, 0x4a, 0xc9, 0x18, 0xba,
	0xf1, 0xc3, 0xd2, 0xd7, 0xee, 0x51, 0x3a, 0x0d, 0x58, 0x2c, 0x2e, 0x95, 0x6c, 0x79, 0xb3, 0x22,
	0xd7, 0x6d, 0xe7, 0x31, 0xec, 0xe8, 0x9f, 0xbd, 0xd4, 0x3f, 0x3e, 0xb5, 0x42, 0x63, 0x51, 0x71,
	0x8b, 0xe4, 0xac, 0x41, 0x0e, 0x1e, 0xba, 0xe2, 0x16, 0x5f, 0x1a, 0xe4, 0xf0, 0xa5, 0x41, 0xd8,
	0x25, 0x1c, 0x0b, 0xe3, 0x8d, 0x5c, 0x78, 0x0d, 0xf3, 0xba, 0x56, 0x7f, 0x62, 0x45, 0x4e, 0x1b,
	0xe5, 0x07, 0xc2, 0x90, 0x93, 0xef, 0x5d, 0xee, 0xad, 0x4f, 0xb9, 0x3f, 0xe2, 0xa5, 0x41, 0x1d,
	0xfc, 0x46, 0x6b, 0x67, 0x71, 0xf7, 0xeb, 0xcf, 0xf9, 0x8a, 0x12, 0x23, 0x07, 0x90, 0x0d, 0x2f,
	0x60, 0x1c, 0x15, 0xfc, 0xab, 0x30, 0x96, 0xcd, 0xa0, 0x5f, 0x0b, 0x63, 0xb3, 0xde, 0x6c, 0xfb,
	0x2c, 0x9d, 0x8f, 0xbb, 0x0a, 0xcf, 0x29, 0x73, 0xfa, 0xf7, 0x16, 0x1c, 0xe5, 0xf8, 0xc7, 0xb5,
	0xd2, 0x25, 0x52, 0x03, 0x6b, 0x17, 0xc7, 0xc3, 0x7b, 0x9d, 0xc3, 0x37, 0xce, 0xde, 0xfa, 0x5f,
	0x67, 0x5f, 0x74, 0x3f, 0x64, 0xce, 0x9e, 0x93, 0x39, 0x73, 0xb4, 0xdf, 0xdd, 0x27, 0xf0, 0x2a,
	0x66, 0xba, 0x1f, 0xb7, 0x43, 0x18, 0x78, 0xb1, 0xf7, 0x49, 0x07, 0x3e, 0x70, 0x6f, 0xe1, 0x25,
	0x46, 0xb6, 0x1a, 0xe4, 0x21, 0xea, 0x3e, 0xfd, 0xf0, 0xf9, 0xd3, 0xbf, 0x06, 0xd0, 0xd8, 0x2e,
	0x75, 0xf9, 0x81, 0x1b, 0xef, 0x9c, 0x51, 0xde, 0x41, 0xc2, 0xbb, 0x3b, 0x6d, 0x93, 0x6d, 0x92,
	0x3c, 0x86, 0x8b, 0x21, 0x7d, 0x99, 0x2f, 0xff, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x1e, 0x89, 0x1c,
	0x25, 0xca, 0x07, 0x00, 0x00,
}
