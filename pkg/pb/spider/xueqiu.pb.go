// Code generated by protoc-gen-go. DO NOT EDIT.
// source: spider/xueqiu.proto

package spider

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HotStockItem struct {
	Change               float64  `protobuf:"fixed64,1,opt,name=change,proto3" json:"change"`
	Exchange             string   `protobuf:"bytes,2,opt,name=exchange,proto3" json:"exchange"`
	Symbol               string   `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol"`
	Current              float64  `protobuf:"fixed64,4,opt,name=current,proto3" json:"current"`
	Increment            float64  `protobuf:"fixed64,5,opt,name=increment,proto3" json:"increment"`
	Name                 string   `protobuf:"bytes,6,opt,name=name,proto3" json:"name"`
	Percent              float64  `protobuf:"fixed64,7,opt,name=percent,proto3" json:"percent"`
	Type                 int32    `protobuf:"varint,8,opt,name=type,proto3" json:"type"`
	Value                float64  `protobuf:"fixed64,9,opt,name=value,proto3" json:"value"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HotStockItem) Reset()         { *m = HotStockItem{} }
func (m *HotStockItem) String() string { return proto.CompactTextString(m) }
func (*HotStockItem) ProtoMessage()    {}
func (*HotStockItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_86f1d0b67a74b3e3, []int{0}
}

func (m *HotStockItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HotStockItem.Unmarshal(m, b)
}
func (m *HotStockItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HotStockItem.Marshal(b, m, deterministic)
}
func (m *HotStockItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HotStockItem.Merge(m, src)
}
func (m *HotStockItem) XXX_Size() int {
	return xxx_messageInfo_HotStockItem.Size(m)
}
func (m *HotStockItem) XXX_DiscardUnknown() {
	xxx_messageInfo_HotStockItem.DiscardUnknown(m)
}

var xxx_messageInfo_HotStockItem proto.InternalMessageInfo

func (m *HotStockItem) GetChange() float64 {
	if m != nil {
		return m.Change
	}
	return 0
}

func (m *HotStockItem) GetExchange() string {
	if m != nil {
		return m.Exchange
	}
	return ""
}

func (m *HotStockItem) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *HotStockItem) GetCurrent() float64 {
	if m != nil {
		return m.Current
	}
	return 0
}

func (m *HotStockItem) GetIncrement() float64 {
	if m != nil {
		return m.Increment
	}
	return 0
}

func (m *HotStockItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *HotStockItem) GetPercent() float64 {
	if m != nil {
		return m.Percent
	}
	return 0
}

func (m *HotStockItem) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *HotStockItem) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type HotStockList struct {
	GlobalH1             []*HotStockItem `protobuf:"bytes,1,rep,name=global_h1,json=globalH1,proto3" json:"globalH1"`
	GlobalH24            []*HotStockItem `protobuf:"bytes,2,rep,name=global_h24,json=globalH24,proto3" json:"globalH24"`
	AshareH1             []*HotStockItem `protobuf:"bytes,3,rep,name=ashare_h1,json=ashareH1,proto3" json:"ashareH1"`
	AshareH24            []*HotStockItem `protobuf:"bytes,4,rep,name=ashare_h24,json=ashareH24,proto3" json:"ashareH24"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *HotStockList) Reset()         { *m = HotStockList{} }
func (m *HotStockList) String() string { return proto.CompactTextString(m) }
func (*HotStockList) ProtoMessage()    {}
func (*HotStockList) Descriptor() ([]byte, []int) {
	return fileDescriptor_86f1d0b67a74b3e3, []int{1}
}

func (m *HotStockList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HotStockList.Unmarshal(m, b)
}
func (m *HotStockList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HotStockList.Marshal(b, m, deterministic)
}
func (m *HotStockList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HotStockList.Merge(m, src)
}
func (m *HotStockList) XXX_Size() int {
	return xxx_messageInfo_HotStockList.Size(m)
}
func (m *HotStockList) XXX_DiscardUnknown() {
	xxx_messageInfo_HotStockList.DiscardUnknown(m)
}

var xxx_messageInfo_HotStockList proto.InternalMessageInfo

func (m *HotStockList) GetGlobalH1() []*HotStockItem {
	if m != nil {
		return m.GlobalH1
	}
	return nil
}

func (m *HotStockList) GetGlobalH24() []*HotStockItem {
	if m != nil {
		return m.GlobalH24
	}
	return nil
}

func (m *HotStockList) GetAshareH1() []*HotStockItem {
	if m != nil {
		return m.AshareH1
	}
	return nil
}

func (m *HotStockList) GetAshareH24() []*HotStockItem {
	if m != nil {
		return m.AshareH24
	}
	return nil
}

// 分红配送
type Bonus struct {
	AshareExDividendDate int64    `protobuf:"varint,1,opt,name=ashare_ex_dividend_date,json=ashareExDividendDate,proto3" json:"ashareExDividendDate"`
	CancleDividendDate   int64    `protobuf:"varint,2,opt,name=cancle_dividend_date,json=cancleDividendDate,proto3" json:"cancleDividendDate"`
	DividendDate         int64    `protobuf:"varint,3,opt,name=dividend_date,json=dividendDate,proto3" json:"dividendDate"`
	DividendYear         string   `protobuf:"bytes,4,opt,name=dividend_year,json=dividendYear,proto3" json:"dividendYear"`
	EquityDate           int64    `protobuf:"varint,5,opt,name=equity_date,json=equityDate,proto3" json:"equityDate"`
	ExDividendDate       int64    `protobuf:"varint,6,opt,name=ex_dividend_date,json=exDividendDate,proto3" json:"exDividendDate"`
	PlanExplain          string   `protobuf:"bytes,7,opt,name=plan_explain,json=planExplain,proto3" json:"planExplain"`
	DividendCash         float64  `protobuf:"fixed64,8,opt,name=dividend_cash,json=dividendCash,proto3" json:"dividendCash"`
	DividendShare        float64  `protobuf:"fixed64,9,opt,name=dividend_share,json=dividendShare,proto3" json:"dividendShare"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bonus) Reset()         { *m = Bonus{} }
func (m *Bonus) String() string { return proto.CompactTextString(m) }
func (*Bonus) ProtoMessage()    {}
func (*Bonus) Descriptor() ([]byte, []int) {
	return fileDescriptor_86f1d0b67a74b3e3, []int{2}
}

func (m *Bonus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bonus.Unmarshal(m, b)
}
func (m *Bonus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bonus.Marshal(b, m, deterministic)
}
func (m *Bonus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bonus.Merge(m, src)
}
func (m *Bonus) XXX_Size() int {
	return xxx_messageInfo_Bonus.Size(m)
}
func (m *Bonus) XXX_DiscardUnknown() {
	xxx_messageInfo_Bonus.DiscardUnknown(m)
}

var xxx_messageInfo_Bonus proto.InternalMessageInfo

func (m *Bonus) GetAshareExDividendDate() int64 {
	if m != nil {
		return m.AshareExDividendDate
	}
	return 0
}

func (m *Bonus) GetCancleDividendDate() int64 {
	if m != nil {
		return m.CancleDividendDate
	}
	return 0
}

func (m *Bonus) GetDividendDate() int64 {
	if m != nil {
		return m.DividendDate
	}
	return 0
}

func (m *Bonus) GetDividendYear() string {
	if m != nil {
		return m.DividendYear
	}
	return ""
}

func (m *Bonus) GetEquityDate() int64 {
	if m != nil {
		return m.EquityDate
	}
	return 0
}

func (m *Bonus) GetExDividendDate() int64 {
	if m != nil {
		return m.ExDividendDate
	}
	return 0
}

func (m *Bonus) GetPlanExplain() string {
	if m != nil {
		return m.PlanExplain
	}
	return ""
}

func (m *Bonus) GetDividendCash() float64 {
	if m != nil {
		return m.DividendCash
	}
	return 0
}

func (m *Bonus) GetDividendShare() float64 {
	if m != nil {
		return m.DividendShare
	}
	return 0
}

func init() {
	proto.RegisterType((*HotStockItem)(nil), "goshare.spider.HotStockItem")
	proto.RegisterType((*HotStockList)(nil), "goshare.spider.HotStockList")
	proto.RegisterType((*Bonus)(nil), "goshare.spider.Bonus")
}

func init() { proto.RegisterFile("spider/xueqiu.proto", fileDescriptor_86f1d0b67a74b3e3) }

var fileDescriptor_86f1d0b67a74b3e3 = []byte{
	// 481 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0xcd, 0x8b, 0xd3, 0x40,
	0x14, 0x27, 0xfd, 0xda, 0xe6, 0xb5, 0x16, 0x19, 0x8b, 0x0e, 0xb2, 0x60, 0xad, 0x08, 0x05, 0xb1,
	0x71, 0x6b, 0x3d, 0x88, 0xb7, 0x75, 0x17, 0x2a, 0x78, 0xca, 0x9e, 0xf4, 0x52, 0x26, 0xc9, 0x23,
	0x19, 0x36, 0x99, 0x64, 0x27, 0x93, 0x25, 0xfd, 0x97, 0x3d, 0x7b, 0x16, 0xc9, 0xcc, 0xb4, 0xdd,
	0x28, 0x0b, 0xbd, 0xe5, 0xbd, 0xdf, 0xd7, 0xcc, 0xbc, 0x17, 0x78, 0x56, 0x16, 0x3c, 0x42, 0xe9,
	0xd5, 0x15, 0xde, 0xf1, 0x6a, 0x59, 0xc8, 0x5c, 0xe5, 0x64, 0x12, 0xe7, 0x65, 0xc2, 0x24, 0x2e,
	0x0d, 0x38, 0xff, 0xe5, 0xc0, 0x78, 0x93, 0xab, 0x1b, 0x95, 0x87, 0xb7, 0xdf, 0x14, 0x66, 0xe4,
	0x39, 0x0c, 0xc2, 0x84, 0x89, 0x18, 0xa9, 0x33, 0x73, 0x16, 0x8e, 0x6f, 0x2b, 0xf2, 0x12, 0x86,
	0x58, 0x5b, 0xa4, 0x33, 0x73, 0x16, 0xae, 0x7f, 0xa8, 0x1b, 0x4d, 0xb9, 0xcb, 0x82, 0x3c, 0xa5,
	0x5d, 0x8d, 0xd8, 0x8a, 0x50, 0x38, 0x0b, 0x2b, 0x29, 0x51, 0x28, 0xda, 0xd3, 0x66, 0xfb, 0x92,
	0x9c, 0x83, 0xcb, 0x45, 0x28, 0x31, 0x6b, 0xb0, 0xbe, 0xc6, 0x8e, 0x0d, 0x42, 0xa0, 0x27, 0x58,
	0x86, 0x74, 0xa0, 0xdd, 0xf4, 0x77, 0xe3, 0x55, 0xa0, 0x0c, 0x1b, 0xfe, 0x99, 0xf1, 0xb2, 0x65,
	0xc3, 0x56, 0xbb, 0x02, 0xe9, 0x70, 0xe6, 0x2c, 0xfa, 0xbe, 0xfe, 0x26, 0x53, 0xe8, 0xdf, 0xb3,
	0xb4, 0x42, 0xea, 0x6a, 0xae, 0x29, 0xe6, 0x7f, 0x1e, 0x5c, 0xf6, 0x3b, 0x2f, 0x15, 0xf9, 0x0c,
	0x6e, 0x9c, 0xe6, 0x01, 0x4b, 0xb7, 0xc9, 0x05, 0x75, 0x66, 0xdd, 0xc5, 0x68, 0x75, 0xbe, 0x6c,
	0xbf, 0xd0, 0xf2, 0xe1, 0xeb, 0xf8, 0x43, 0x43, 0xdf, 0x5c, 0x90, 0x2f, 0x00, 0x7b, 0xe9, 0x6a,
	0x4d, 0x3b, 0x27, 0x68, 0x6d, 0xd4, 0x66, 0xb5, 0x6e, 0x72, 0x99, 0x26, 0x36, 0xb9, 0xdd, 0x53,
	0x72, 0x0d, 0xdd, 0xe4, 0xee, 0xa5, 0xab, 0x35, 0xed, 0x9d, 0x92, 0x6b, 0xb5, 0xab, 0xf5, 0xfc,
	0x77, 0x07, 0xfa, 0x97, 0xb9, 0xa8, 0x4a, 0xf2, 0x09, 0x5e, 0x58, 0x1b, 0xac, 0xb7, 0x11, 0xbf,
	0xe7, 0x11, 0x8a, 0x68, 0x1b, 0x31, 0x65, 0xe6, 0xde, 0xf5, 0xa7, 0x06, 0xbe, 0xae, 0xaf, 0x2c,
	0x78, 0xc5, 0x14, 0x92, 0x0f, 0x30, 0x0d, 0x99, 0x08, 0x53, 0xfc, 0x47, 0xd3, 0xd1, 0x1a, 0x62,
	0xb0, 0x96, 0xe2, 0x0d, 0x3c, 0x69, 0x53, 0xbb, 0x9a, 0x3a, 0x8e, 0x1e, 0x23, 0xed, 0x90, 0x49,
	0xbd, 0x2e, 0xee, 0x91, 0xf4, 0x03, 0x99, 0x24, 0xaf, 0x60, 0x84, 0x77, 0x15, 0x57, 0x3b, 0xe3,
	0xd3, 0xd7, 0x3e, 0x60, 0x5a, 0xda, 0x65, 0x01, 0x4f, 0xff, 0xbb, 0xcc, 0x40, 0xb3, 0x26, 0xd8,
	0xbe, 0xc6, 0x6b, 0x18, 0x17, 0x29, 0x13, 0x5b, 0xac, 0x8b, 0x94, 0x71, 0xa1, 0x37, 0xca, 0xf5,
	0x47, 0x4d, 0xef, 0xda, 0xb4, 0x5a, 0x47, 0x0a, 0x59, 0x99, 0xe8, 0xf5, 0x72, 0x8e, 0x47, 0xfa,
	0xca, 0xca, 0x84, 0xbc, 0x85, 0xc9, 0x81, 0xa4, 0x9f, 0xcb, 0xee, 0xdb, 0x41, 0x7a, 0xd3, 0x34,
	0x2f, 0xdf, 0xff, 0x7c, 0x17, 0x73, 0x95, 0x54, 0xc1, 0x32, 0xcc, 0x33, 0x2f, 0xe3, 0x02, 0x25,
	0x4b, 0x25, 0x96, 0x9e, 0x1d, 0x9b, 0x57, 0xdc, 0xc6, 0x5e, 0x11, 0x78, 0x66, 0x7a, 0xc1, 0x40,
	0xff, 0xaa, 0x1f, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0xb6, 0x6f, 0xd0, 0x4e, 0xc1, 0x03, 0x00,
	0x00,
}
