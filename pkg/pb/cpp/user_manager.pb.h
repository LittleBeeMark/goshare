// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: user_manager.proto

#ifndef PROTOBUF_INCLUDED_user_5fmanager_2eproto
#define PROTOBUF_INCLUDED_user_5fmanager_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
#include "user.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_user_5fmanager_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_user_5fmanager_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[10]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_user_5fmanager_2eproto();
namespace pb {
class ReqCheckAPIPermission;
class ReqCheckAPIPermissionDefaultTypeInternal;
extern ReqCheckAPIPermissionDefaultTypeInternal _ReqCheckAPIPermission_default_instance_;
class ReqCheckResourcePermission;
class ReqCheckResourcePermissionDefaultTypeInternal;
extern ReqCheckResourcePermissionDefaultTypeInternal _ReqCheckResourcePermission_default_instance_;
class ReqCreateBranch;
class ReqCreateBranchDefaultTypeInternal;
extern ReqCreateBranchDefaultTypeInternal _ReqCreateBranch_default_instance_;
class ReqCreateUser;
class ReqCreateUserDefaultTypeInternal;
extern ReqCreateUserDefaultTypeInternal _ReqCreateUser_default_instance_;
class ReqDeleteBranch;
class ReqDeleteBranchDefaultTypeInternal;
extern ReqDeleteBranchDefaultTypeInternal _ReqDeleteBranch_default_instance_;
class ReqDeleteUser;
class ReqDeleteUserDefaultTypeInternal;
extern ReqDeleteUserDefaultTypeInternal _ReqDeleteUser_default_instance_;
class ReqUserLogin;
class ReqUserLoginDefaultTypeInternal;
extern ReqUserLoginDefaultTypeInternal _ReqUserLogin_default_instance_;
class RspCheckAPIPermission;
class RspCheckAPIPermissionDefaultTypeInternal;
extern RspCheckAPIPermissionDefaultTypeInternal _RspCheckAPIPermission_default_instance_;
class RspCheckResourcePermission;
class RspCheckResourcePermissionDefaultTypeInternal;
extern RspCheckResourcePermissionDefaultTypeInternal _RspCheckResourcePermission_default_instance_;
class RspUserLogin;
class RspUserLoginDefaultTypeInternal;
extern RspUserLoginDefaultTypeInternal _RspUserLogin_default_instance_;
}  // namespace pb
namespace google {
namespace protobuf {
template<> ::pb::ReqCheckAPIPermission* Arena::CreateMaybeMessage<::pb::ReqCheckAPIPermission>(Arena*);
template<> ::pb::ReqCheckResourcePermission* Arena::CreateMaybeMessage<::pb::ReqCheckResourcePermission>(Arena*);
template<> ::pb::ReqCreateBranch* Arena::CreateMaybeMessage<::pb::ReqCreateBranch>(Arena*);
template<> ::pb::ReqCreateUser* Arena::CreateMaybeMessage<::pb::ReqCreateUser>(Arena*);
template<> ::pb::ReqDeleteBranch* Arena::CreateMaybeMessage<::pb::ReqDeleteBranch>(Arena*);
template<> ::pb::ReqDeleteUser* Arena::CreateMaybeMessage<::pb::ReqDeleteUser>(Arena*);
template<> ::pb::ReqUserLogin* Arena::CreateMaybeMessage<::pb::ReqUserLogin>(Arena*);
template<> ::pb::RspCheckAPIPermission* Arena::CreateMaybeMessage<::pb::RspCheckAPIPermission>(Arena*);
template<> ::pb::RspCheckResourcePermission* Arena::CreateMaybeMessage<::pb::RspCheckResourcePermission>(Arena*);
template<> ::pb::RspUserLogin* Arena::CreateMaybeMessage<::pb::RspUserLogin>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace pb {

// ===================================================================

class ReqCreateBranch :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.ReqCreateBranch) */ {
 public:
  ReqCreateBranch();
  virtual ~ReqCreateBranch();

  ReqCreateBranch(const ReqCreateBranch& from);

  inline ReqCreateBranch& operator=(const ReqCreateBranch& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReqCreateBranch(ReqCreateBranch&& from) noexcept
    : ReqCreateBranch() {
    *this = ::std::move(from);
  }

  inline ReqCreateBranch& operator=(ReqCreateBranch&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ReqCreateBranch& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReqCreateBranch* internal_default_instance() {
    return reinterpret_cast<const ReqCreateBranch*>(
               &_ReqCreateBranch_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ReqCreateBranch* other);
  friend void swap(ReqCreateBranch& a, ReqCreateBranch& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReqCreateBranch* New() const final {
    return CreateMaybeMessage<ReqCreateBranch>(nullptr);
  }

  ReqCreateBranch* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReqCreateBranch>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReqCreateBranch& from);
  void MergeFrom(const ReqCreateBranch& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReqCreateBranch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pb.ReqCreateBranch)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_user_5fmanager_2eproto;
};
// -------------------------------------------------------------------

class ReqDeleteBranch :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.ReqDeleteBranch) */ {
 public:
  ReqDeleteBranch();
  virtual ~ReqDeleteBranch();

  ReqDeleteBranch(const ReqDeleteBranch& from);

  inline ReqDeleteBranch& operator=(const ReqDeleteBranch& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReqDeleteBranch(ReqDeleteBranch&& from) noexcept
    : ReqDeleteBranch() {
    *this = ::std::move(from);
  }

  inline ReqDeleteBranch& operator=(ReqDeleteBranch&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ReqDeleteBranch& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReqDeleteBranch* internal_default_instance() {
    return reinterpret_cast<const ReqDeleteBranch*>(
               &_ReqDeleteBranch_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ReqDeleteBranch* other);
  friend void swap(ReqDeleteBranch& a, ReqDeleteBranch& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReqDeleteBranch* New() const final {
    return CreateMaybeMessage<ReqDeleteBranch>(nullptr);
  }

  ReqDeleteBranch* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReqDeleteBranch>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReqDeleteBranch& from);
  void MergeFrom(const ReqDeleteBranch& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReqDeleteBranch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pb.ReqDeleteBranch)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_user_5fmanager_2eproto;
};
// -------------------------------------------------------------------

class ReqCreateUser :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.ReqCreateUser) */ {
 public:
  ReqCreateUser();
  virtual ~ReqCreateUser();

  ReqCreateUser(const ReqCreateUser& from);

  inline ReqCreateUser& operator=(const ReqCreateUser& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReqCreateUser(ReqCreateUser&& from) noexcept
    : ReqCreateUser() {
    *this = ::std::move(from);
  }

  inline ReqCreateUser& operator=(ReqCreateUser&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ReqCreateUser& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReqCreateUser* internal_default_instance() {
    return reinterpret_cast<const ReqCreateUser*>(
               &_ReqCreateUser_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ReqCreateUser* other);
  friend void swap(ReqCreateUser& a, ReqCreateUser& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReqCreateUser* New() const final {
    return CreateMaybeMessage<ReqCreateUser>(nullptr);
  }

  ReqCreateUser* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReqCreateUser>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReqCreateUser& from);
  void MergeFrom(const ReqCreateUser& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReqCreateUser* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pb.ReqCreateUser)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_user_5fmanager_2eproto;
};
// -------------------------------------------------------------------

class ReqDeleteUser :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.ReqDeleteUser) */ {
 public:
  ReqDeleteUser();
  virtual ~ReqDeleteUser();

  ReqDeleteUser(const ReqDeleteUser& from);

  inline ReqDeleteUser& operator=(const ReqDeleteUser& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReqDeleteUser(ReqDeleteUser&& from) noexcept
    : ReqDeleteUser() {
    *this = ::std::move(from);
  }

  inline ReqDeleteUser& operator=(ReqDeleteUser&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ReqDeleteUser& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReqDeleteUser* internal_default_instance() {
    return reinterpret_cast<const ReqDeleteUser*>(
               &_ReqDeleteUser_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(ReqDeleteUser* other);
  friend void swap(ReqDeleteUser& a, ReqDeleteUser& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReqDeleteUser* New() const final {
    return CreateMaybeMessage<ReqDeleteUser>(nullptr);
  }

  ReqDeleteUser* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReqDeleteUser>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReqDeleteUser& from);
  void MergeFrom(const ReqDeleteUser& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReqDeleteUser* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pb.ReqDeleteUser)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_user_5fmanager_2eproto;
};
// -------------------------------------------------------------------

class ReqCheckAPIPermission :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.ReqCheckAPIPermission) */ {
 public:
  ReqCheckAPIPermission();
  virtual ~ReqCheckAPIPermission();

  ReqCheckAPIPermission(const ReqCheckAPIPermission& from);

  inline ReqCheckAPIPermission& operator=(const ReqCheckAPIPermission& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReqCheckAPIPermission(ReqCheckAPIPermission&& from) noexcept
    : ReqCheckAPIPermission() {
    *this = ::std::move(from);
  }

  inline ReqCheckAPIPermission& operator=(ReqCheckAPIPermission&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ReqCheckAPIPermission& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReqCheckAPIPermission* internal_default_instance() {
    return reinterpret_cast<const ReqCheckAPIPermission*>(
               &_ReqCheckAPIPermission_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(ReqCheckAPIPermission* other);
  friend void swap(ReqCheckAPIPermission& a, ReqCheckAPIPermission& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReqCheckAPIPermission* New() const final {
    return CreateMaybeMessage<ReqCheckAPIPermission>(nullptr);
  }

  ReqCheckAPIPermission* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReqCheckAPIPermission>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReqCheckAPIPermission& from);
  void MergeFrom(const ReqCheckAPIPermission& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReqCheckAPIPermission* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string api = 2;
  void clear_api();
  static const int kApiFieldNumber = 2;
  const ::std::string& api() const;
  void set_api(const ::std::string& value);
  #if LANG_CXX11
  void set_api(::std::string&& value);
  #endif
  void set_api(const char* value);
  void set_api(const char* value, size_t size);
  ::std::string* mutable_api();
  ::std::string* release_api();
  void set_allocated_api(::std::string* api);

  // .pb.UserType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::pb::UserType type() const;
  void set_type(::pb::UserType value);

  // @@protoc_insertion_point(class_scope:pb.ReqCheckAPIPermission)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr api_;
  int type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_user_5fmanager_2eproto;
};
// -------------------------------------------------------------------

class RspCheckAPIPermission :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.RspCheckAPIPermission) */ {
 public:
  RspCheckAPIPermission();
  virtual ~RspCheckAPIPermission();

  RspCheckAPIPermission(const RspCheckAPIPermission& from);

  inline RspCheckAPIPermission& operator=(const RspCheckAPIPermission& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RspCheckAPIPermission(RspCheckAPIPermission&& from) noexcept
    : RspCheckAPIPermission() {
    *this = ::std::move(from);
  }

  inline RspCheckAPIPermission& operator=(RspCheckAPIPermission&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RspCheckAPIPermission& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RspCheckAPIPermission* internal_default_instance() {
    return reinterpret_cast<const RspCheckAPIPermission*>(
               &_RspCheckAPIPermission_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(RspCheckAPIPermission* other);
  friend void swap(RspCheckAPIPermission& a, RspCheckAPIPermission& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RspCheckAPIPermission* New() const final {
    return CreateMaybeMessage<RspCheckAPIPermission>(nullptr);
  }

  RspCheckAPIPermission* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RspCheckAPIPermission>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RspCheckAPIPermission& from);
  void MergeFrom(const RspCheckAPIPermission& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RspCheckAPIPermission* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool passed = 1;
  void clear_passed();
  static const int kPassedFieldNumber = 1;
  bool passed() const;
  void set_passed(bool value);

  // @@protoc_insertion_point(class_scope:pb.RspCheckAPIPermission)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool passed_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_user_5fmanager_2eproto;
};
// -------------------------------------------------------------------

class ReqCheckResourcePermission :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.ReqCheckResourcePermission) */ {
 public:
  ReqCheckResourcePermission();
  virtual ~ReqCheckResourcePermission();

  ReqCheckResourcePermission(const ReqCheckResourcePermission& from);

  inline ReqCheckResourcePermission& operator=(const ReqCheckResourcePermission& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReqCheckResourcePermission(ReqCheckResourcePermission&& from) noexcept
    : ReqCheckResourcePermission() {
    *this = ::std::move(from);
  }

  inline ReqCheckResourcePermission& operator=(ReqCheckResourcePermission&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ReqCheckResourcePermission& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReqCheckResourcePermission* internal_default_instance() {
    return reinterpret_cast<const ReqCheckResourcePermission*>(
               &_ReqCheckResourcePermission_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(ReqCheckResourcePermission* other);
  friend void swap(ReqCheckResourcePermission& a, ReqCheckResourcePermission& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReqCheckResourcePermission* New() const final {
    return CreateMaybeMessage<ReqCheckResourcePermission>(nullptr);
  }

  ReqCheckResourcePermission* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReqCheckResourcePermission>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReqCheckResourcePermission& from);
  void MergeFrom(const ReqCheckResourcePermission& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReqCheckResourcePermission* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 resource = 2;
  void clear_resource();
  static const int kResourceFieldNumber = 2;
  ::google::protobuf::int64 resource() const;
  void set_resource(::google::protobuf::int64 value);

  // .pb.UserType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::pb::UserType type() const;
  void set_type(::pb::UserType value);

  // @@protoc_insertion_point(class_scope:pb.ReqCheckResourcePermission)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 resource_;
  int type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_user_5fmanager_2eproto;
};
// -------------------------------------------------------------------

class RspCheckResourcePermission :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.RspCheckResourcePermission) */ {
 public:
  RspCheckResourcePermission();
  virtual ~RspCheckResourcePermission();

  RspCheckResourcePermission(const RspCheckResourcePermission& from);

  inline RspCheckResourcePermission& operator=(const RspCheckResourcePermission& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RspCheckResourcePermission(RspCheckResourcePermission&& from) noexcept
    : RspCheckResourcePermission() {
    *this = ::std::move(from);
  }

  inline RspCheckResourcePermission& operator=(RspCheckResourcePermission&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RspCheckResourcePermission& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RspCheckResourcePermission* internal_default_instance() {
    return reinterpret_cast<const RspCheckResourcePermission*>(
               &_RspCheckResourcePermission_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(RspCheckResourcePermission* other);
  friend void swap(RspCheckResourcePermission& a, RspCheckResourcePermission& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RspCheckResourcePermission* New() const final {
    return CreateMaybeMessage<RspCheckResourcePermission>(nullptr);
  }

  RspCheckResourcePermission* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RspCheckResourcePermission>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RspCheckResourcePermission& from);
  void MergeFrom(const RspCheckResourcePermission& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RspCheckResourcePermission* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool passed = 1;
  void clear_passed();
  static const int kPassedFieldNumber = 1;
  bool passed() const;
  void set_passed(bool value);

  // @@protoc_insertion_point(class_scope:pb.RspCheckResourcePermission)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool passed_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_user_5fmanager_2eproto;
};
// -------------------------------------------------------------------

class ReqUserLogin :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.ReqUserLogin) */ {
 public:
  ReqUserLogin();
  virtual ~ReqUserLogin();

  ReqUserLogin(const ReqUserLogin& from);

  inline ReqUserLogin& operator=(const ReqUserLogin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReqUserLogin(ReqUserLogin&& from) noexcept
    : ReqUserLogin() {
    *this = ::std::move(from);
  }

  inline ReqUserLogin& operator=(ReqUserLogin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ReqUserLogin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReqUserLogin* internal_default_instance() {
    return reinterpret_cast<const ReqUserLogin*>(
               &_ReqUserLogin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(ReqUserLogin* other);
  friend void swap(ReqUserLogin& a, ReqUserLogin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReqUserLogin* New() const final {
    return CreateMaybeMessage<ReqUserLogin>(nullptr);
  }

  ReqUserLogin* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReqUserLogin>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReqUserLogin& from);
  void MergeFrom(const ReqUserLogin& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReqUserLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string user = 1;
  void clear_user();
  static const int kUserFieldNumber = 1;
  const ::std::string& user() const;
  void set_user(const ::std::string& value);
  #if LANG_CXX11
  void set_user(::std::string&& value);
  #endif
  void set_user(const char* value);
  void set_user(const char* value, size_t size);
  ::std::string* mutable_user();
  ::std::string* release_user();
  void set_allocated_user(::std::string* user);

  // string password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // string type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // @@protoc_insertion_point(class_scope:pb.ReqUserLogin)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_user_5fmanager_2eproto;
};
// -------------------------------------------------------------------

class RspUserLogin :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.RspUserLogin) */ {
 public:
  RspUserLogin();
  virtual ~RspUserLogin();

  RspUserLogin(const RspUserLogin& from);

  inline RspUserLogin& operator=(const RspUserLogin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RspUserLogin(RspUserLogin&& from) noexcept
    : RspUserLogin() {
    *this = ::std::move(from);
  }

  inline RspUserLogin& operator=(RspUserLogin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RspUserLogin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RspUserLogin* internal_default_instance() {
    return reinterpret_cast<const RspUserLogin*>(
               &_RspUserLogin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(RspUserLogin* other);
  friend void swap(RspUserLogin& a, RspUserLogin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RspUserLogin* New() const final {
    return CreateMaybeMessage<RspUserLogin>(nullptr);
  }

  RspUserLogin* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RspUserLogin>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RspUserLogin& from);
  void MergeFrom(const RspUserLogin& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RspUserLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string message = 1;
  void clear_message();
  static const int kMessageFieldNumber = 1;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // bool success = 2;
  void clear_success();
  static const int kSuccessFieldNumber = 2;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:pb.RspUserLogin)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  bool success_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_user_5fmanager_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ReqCreateBranch

// -------------------------------------------------------------------

// ReqDeleteBranch

// -------------------------------------------------------------------

// ReqCreateUser

// -------------------------------------------------------------------

// ReqDeleteUser

// -------------------------------------------------------------------

// ReqCheckAPIPermission

// .pb.UserType type = 1;
inline void ReqCheckAPIPermission::clear_type() {
  type_ = 0;
}
inline ::pb::UserType ReqCheckAPIPermission::type() const {
  // @@protoc_insertion_point(field_get:pb.ReqCheckAPIPermission.type)
  return static_cast< ::pb::UserType >(type_);
}
inline void ReqCheckAPIPermission::set_type(::pb::UserType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:pb.ReqCheckAPIPermission.type)
}

// string api = 2;
inline void ReqCheckAPIPermission::clear_api() {
  api_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqCheckAPIPermission::api() const {
  // @@protoc_insertion_point(field_get:pb.ReqCheckAPIPermission.api)
  return api_.GetNoArena();
}
inline void ReqCheckAPIPermission::set_api(const ::std::string& value) {
  
  api_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.ReqCheckAPIPermission.api)
}
#if LANG_CXX11
inline void ReqCheckAPIPermission::set_api(::std::string&& value) {
  
  api_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.ReqCheckAPIPermission.api)
}
#endif
inline void ReqCheckAPIPermission::set_api(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  api_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.ReqCheckAPIPermission.api)
}
inline void ReqCheckAPIPermission::set_api(const char* value, size_t size) {
  
  api_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.ReqCheckAPIPermission.api)
}
inline ::std::string* ReqCheckAPIPermission::mutable_api() {
  
  // @@protoc_insertion_point(field_mutable:pb.ReqCheckAPIPermission.api)
  return api_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqCheckAPIPermission::release_api() {
  // @@protoc_insertion_point(field_release:pb.ReqCheckAPIPermission.api)
  
  return api_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqCheckAPIPermission::set_allocated_api(::std::string* api) {
  if (api != nullptr) {
    
  } else {
    
  }
  api_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), api);
  // @@protoc_insertion_point(field_set_allocated:pb.ReqCheckAPIPermission.api)
}

// -------------------------------------------------------------------

// RspCheckAPIPermission

// bool passed = 1;
inline void RspCheckAPIPermission::clear_passed() {
  passed_ = false;
}
inline bool RspCheckAPIPermission::passed() const {
  // @@protoc_insertion_point(field_get:pb.RspCheckAPIPermission.passed)
  return passed_;
}
inline void RspCheckAPIPermission::set_passed(bool value) {
  
  passed_ = value;
  // @@protoc_insertion_point(field_set:pb.RspCheckAPIPermission.passed)
}

// -------------------------------------------------------------------

// ReqCheckResourcePermission

// .pb.UserType type = 1;
inline void ReqCheckResourcePermission::clear_type() {
  type_ = 0;
}
inline ::pb::UserType ReqCheckResourcePermission::type() const {
  // @@protoc_insertion_point(field_get:pb.ReqCheckResourcePermission.type)
  return static_cast< ::pb::UserType >(type_);
}
inline void ReqCheckResourcePermission::set_type(::pb::UserType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:pb.ReqCheckResourcePermission.type)
}

// int64 resource = 2;
inline void ReqCheckResourcePermission::clear_resource() {
  resource_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 ReqCheckResourcePermission::resource() const {
  // @@protoc_insertion_point(field_get:pb.ReqCheckResourcePermission.resource)
  return resource_;
}
inline void ReqCheckResourcePermission::set_resource(::google::protobuf::int64 value) {
  
  resource_ = value;
  // @@protoc_insertion_point(field_set:pb.ReqCheckResourcePermission.resource)
}

// -------------------------------------------------------------------

// RspCheckResourcePermission

// bool passed = 1;
inline void RspCheckResourcePermission::clear_passed() {
  passed_ = false;
}
inline bool RspCheckResourcePermission::passed() const {
  // @@protoc_insertion_point(field_get:pb.RspCheckResourcePermission.passed)
  return passed_;
}
inline void RspCheckResourcePermission::set_passed(bool value) {
  
  passed_ = value;
  // @@protoc_insertion_point(field_set:pb.RspCheckResourcePermission.passed)
}

// -------------------------------------------------------------------

// ReqUserLogin

// string user = 1;
inline void ReqUserLogin::clear_user() {
  user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqUserLogin::user() const {
  // @@protoc_insertion_point(field_get:pb.ReqUserLogin.user)
  return user_.GetNoArena();
}
inline void ReqUserLogin::set_user(const ::std::string& value) {
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.ReqUserLogin.user)
}
#if LANG_CXX11
inline void ReqUserLogin::set_user(::std::string&& value) {
  
  user_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.ReqUserLogin.user)
}
#endif
inline void ReqUserLogin::set_user(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.ReqUserLogin.user)
}
inline void ReqUserLogin::set_user(const char* value, size_t size) {
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.ReqUserLogin.user)
}
inline ::std::string* ReqUserLogin::mutable_user() {
  
  // @@protoc_insertion_point(field_mutable:pb.ReqUserLogin.user)
  return user_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqUserLogin::release_user() {
  // @@protoc_insertion_point(field_release:pb.ReqUserLogin.user)
  
  return user_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqUserLogin::set_allocated_user(::std::string* user) {
  if (user != nullptr) {
    
  } else {
    
  }
  user_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user);
  // @@protoc_insertion_point(field_set_allocated:pb.ReqUserLogin.user)
}

// string password = 2;
inline void ReqUserLogin::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqUserLogin::password() const {
  // @@protoc_insertion_point(field_get:pb.ReqUserLogin.password)
  return password_.GetNoArena();
}
inline void ReqUserLogin::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.ReqUserLogin.password)
}
#if LANG_CXX11
inline void ReqUserLogin::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.ReqUserLogin.password)
}
#endif
inline void ReqUserLogin::set_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.ReqUserLogin.password)
}
inline void ReqUserLogin::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.ReqUserLogin.password)
}
inline ::std::string* ReqUserLogin::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:pb.ReqUserLogin.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqUserLogin::release_password() {
  // @@protoc_insertion_point(field_release:pb.ReqUserLogin.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqUserLogin::set_allocated_password(::std::string* password) {
  if (password != nullptr) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:pb.ReqUserLogin.password)
}

// string type = 3;
inline void ReqUserLogin::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReqUserLogin::type() const {
  // @@protoc_insertion_point(field_get:pb.ReqUserLogin.type)
  return type_.GetNoArena();
}
inline void ReqUserLogin::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.ReqUserLogin.type)
}
#if LANG_CXX11
inline void ReqUserLogin::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.ReqUserLogin.type)
}
#endif
inline void ReqUserLogin::set_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.ReqUserLogin.type)
}
inline void ReqUserLogin::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.ReqUserLogin.type)
}
inline ::std::string* ReqUserLogin::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:pb.ReqUserLogin.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReqUserLogin::release_type() {
  // @@protoc_insertion_point(field_release:pb.ReqUserLogin.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReqUserLogin::set_allocated_type(::std::string* type) {
  if (type != nullptr) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:pb.ReqUserLogin.type)
}

// -------------------------------------------------------------------

// RspUserLogin

// string message = 1;
inline void RspUserLogin::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RspUserLogin::message() const {
  // @@protoc_insertion_point(field_get:pb.RspUserLogin.message)
  return message_.GetNoArena();
}
inline void RspUserLogin::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.RspUserLogin.message)
}
#if LANG_CXX11
inline void RspUserLogin::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.RspUserLogin.message)
}
#endif
inline void RspUserLogin::set_message(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.RspUserLogin.message)
}
inline void RspUserLogin::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.RspUserLogin.message)
}
inline ::std::string* RspUserLogin::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:pb.RspUserLogin.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RspUserLogin::release_message() {
  // @@protoc_insertion_point(field_release:pb.RspUserLogin.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RspUserLogin::set_allocated_message(::std::string* message) {
  if (message != nullptr) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:pb.RspUserLogin.message)
}

// bool success = 2;
inline void RspUserLogin::clear_success() {
  success_ = false;
}
inline bool RspUserLogin::success() const {
  // @@protoc_insertion_point(field_get:pb.RspUserLogin.success)
  return success_;
}
inline void RspUserLogin::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:pb.RspUserLogin.success)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_user_5fmanager_2eproto
