// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tahub.proto

#include "tahub.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_trading_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TradingRoute_trading_2eproto;
namespace pb {
class ReqGetAccountListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReqGetAccountList> _instance;
} _ReqGetAccountList_default_instance_;
class RspGetAccountListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RspGetAccountList> _instance;
} _RspGetAccountList_default_instance_;
class ReqAddAccountDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReqAddAccount> _instance;
} _ReqAddAccount_default_instance_;
class RspAddAccountDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RspAddAccount> _instance;
} _RspAddAccount_default_instance_;
class ReqDeleteAccountDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReqDeleteAccount> _instance;
} _ReqDeleteAccount_default_instance_;
class RspDeleteAccountDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RspDeleteAccount> _instance;
} _RspDeleteAccount_default_instance_;
class ReqGetTradingRouteListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReqGetTradingRouteList> _instance;
} _ReqGetTradingRouteList_default_instance_;
class RspGetTradingRouteListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RspGetTradingRouteList> _instance;
} _RspGetTradingRouteList_default_instance_;
class ReqCreateTradingRouteDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReqCreateTradingRoute> _instance;
} _ReqCreateTradingRoute_default_instance_;
class RspCreateTradingRouteDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RspCreateTradingRoute> _instance;
} _RspCreateTradingRoute_default_instance_;
class ReqDeleteTradingRouteDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReqDeleteTradingRoute> _instance;
} _ReqDeleteTradingRoute_default_instance_;
class RspDeleteTradingRouteDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RspDeleteTradingRoute> _instance;
} _RspDeleteTradingRoute_default_instance_;
}  // namespace pb
static void InitDefaultsscc_info_ReqAddAccount_tahub_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_ReqAddAccount_default_instance_;
    new (ptr) ::pb::ReqAddAccount();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::ReqAddAccount::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReqAddAccount_tahub_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_ReqAddAccount_tahub_2eproto}, {}};

static void InitDefaultsscc_info_ReqCreateTradingRoute_tahub_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_ReqCreateTradingRoute_default_instance_;
    new (ptr) ::pb::ReqCreateTradingRoute();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::ReqCreateTradingRoute::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReqCreateTradingRoute_tahub_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_ReqCreateTradingRoute_tahub_2eproto}, {}};

static void InitDefaultsscc_info_ReqDeleteAccount_tahub_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_ReqDeleteAccount_default_instance_;
    new (ptr) ::pb::ReqDeleteAccount();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::ReqDeleteAccount::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReqDeleteAccount_tahub_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_ReqDeleteAccount_tahub_2eproto}, {}};

static void InitDefaultsscc_info_ReqDeleteTradingRoute_tahub_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_ReqDeleteTradingRoute_default_instance_;
    new (ptr) ::pb::ReqDeleteTradingRoute();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::ReqDeleteTradingRoute::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReqDeleteTradingRoute_tahub_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_ReqDeleteTradingRoute_tahub_2eproto}, {}};

static void InitDefaultsscc_info_ReqGetAccountList_tahub_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_ReqGetAccountList_default_instance_;
    new (ptr) ::pb::ReqGetAccountList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::ReqGetAccountList::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReqGetAccountList_tahub_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_ReqGetAccountList_tahub_2eproto}, {}};

static void InitDefaultsscc_info_ReqGetTradingRouteList_tahub_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_ReqGetTradingRouteList_default_instance_;
    new (ptr) ::pb::ReqGetTradingRouteList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::ReqGetTradingRouteList::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReqGetTradingRouteList_tahub_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_ReqGetTradingRouteList_tahub_2eproto}, {}};

static void InitDefaultsscc_info_RspAddAccount_tahub_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_RspAddAccount_default_instance_;
    new (ptr) ::pb::RspAddAccount();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::RspAddAccount::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RspAddAccount_tahub_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_RspAddAccount_tahub_2eproto}, {}};

static void InitDefaultsscc_info_RspCreateTradingRoute_tahub_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_RspCreateTradingRoute_default_instance_;
    new (ptr) ::pb::RspCreateTradingRoute();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::RspCreateTradingRoute::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RspCreateTradingRoute_tahub_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_RspCreateTradingRoute_tahub_2eproto}, {}};

static void InitDefaultsscc_info_RspDeleteAccount_tahub_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_RspDeleteAccount_default_instance_;
    new (ptr) ::pb::RspDeleteAccount();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::RspDeleteAccount::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RspDeleteAccount_tahub_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_RspDeleteAccount_tahub_2eproto}, {}};

static void InitDefaultsscc_info_RspDeleteTradingRoute_tahub_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_RspDeleteTradingRoute_default_instance_;
    new (ptr) ::pb::RspDeleteTradingRoute();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::RspDeleteTradingRoute::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RspDeleteTradingRoute_tahub_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_RspDeleteTradingRoute_tahub_2eproto}, {}};

static void InitDefaultsscc_info_RspGetAccountList_tahub_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_RspGetAccountList_default_instance_;
    new (ptr) ::pb::RspGetAccountList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::RspGetAccountList::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RspGetAccountList_tahub_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_RspGetAccountList_tahub_2eproto}, {}};

static void InitDefaultsscc_info_RspGetTradingRouteList_tahub_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_RspGetTradingRouteList_default_instance_;
    new (ptr) ::pb::RspGetTradingRouteList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::RspGetTradingRouteList::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RspGetTradingRouteList_tahub_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_RspGetTradingRouteList_tahub_2eproto}, {
      &scc_info_TradingRoute_trading_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_tahub_2eproto[12];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_tahub_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_tahub_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_tahub_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::ReqGetAccountList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::RspGetAccountList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::ReqAddAccount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::RspAddAccount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::ReqDeleteAccount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::RspDeleteAccount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::ReqGetTradingRouteList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::RspGetTradingRouteList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::RspGetTradingRouteList, list_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::ReqCreateTradingRoute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::RspCreateTradingRoute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::ReqDeleteTradingRoute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pb::ReqDeleteTradingRoute, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::RspDeleteTradingRoute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::pb::ReqGetAccountList)},
  { 5, -1, sizeof(::pb::RspGetAccountList)},
  { 10, -1, sizeof(::pb::ReqAddAccount)},
  { 15, -1, sizeof(::pb::RspAddAccount)},
  { 20, -1, sizeof(::pb::ReqDeleteAccount)},
  { 25, -1, sizeof(::pb::RspDeleteAccount)},
  { 30, -1, sizeof(::pb::ReqGetTradingRouteList)},
  { 35, -1, sizeof(::pb::RspGetTradingRouteList)},
  { 41, -1, sizeof(::pb::ReqCreateTradingRoute)},
  { 46, -1, sizeof(::pb::RspCreateTradingRoute)},
  { 51, -1, sizeof(::pb::ReqDeleteTradingRoute)},
  { 57, -1, sizeof(::pb::RspDeleteTradingRoute)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_ReqGetAccountList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_RspGetAccountList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_ReqAddAccount_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_RspAddAccount_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_ReqDeleteAccount_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_RspDeleteAccount_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_ReqGetTradingRouteList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_RspGetTradingRouteList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_ReqCreateTradingRoute_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_RspCreateTradingRoute_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_ReqDeleteTradingRoute_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_RspDeleteTradingRoute_default_instance_),
};

const char descriptor_table_protodef_tahub_2eproto[] =
  "\n\013tahub.proto\022\002pb\032\rtrading.proto\"\023\n\021ReqG"
  "etAccountList\"\023\n\021RspGetAccountList\"\017\n\rRe"
  "qAddAccount\"\017\n\rRspAddAccount\"\022\n\020ReqDelet"
  "eAccount\"\022\n\020RspDeleteAccount\"\030\n\026ReqGetTr"
  "adingRouteList\"8\n\026RspGetTradingRouteList"
  "\022\036\n\004list\030\001 \003(\0132\020.pb.TradingRoute\"\027\n\025ReqC"
  "reateTradingRoute\"\027\n\025RspCreateTradingRou"
  "te\"#\n\025ReqDeleteTradingRoute\022\n\n\002id\030\001 \001(\003\""
  "\027\n\025RspDeleteTradingRoute2\237\003\n\005TAHub\022>\n\016Ge"
  "tAccountList\022\025.pb.ReqGetAccountList\032\025.pb"
  ".RspGetAccountList\0222\n\nAddAccount\022\021.pb.Re"
  "qAddAccount\032\021.pb.RspAddAccount\022;\n\rDelete"
  "Account\022\024.pb.ReqDeleteAccount\032\024.pb.RspDe"
  "leteAccount\022M\n\023GetTradingRouteList\022\032.pb."
  "ReqGetTradingRouteList\032\032.pb.RspGetTradin"
  "gRouteList\022J\n\022CreateTradingRoute\022\031.pb.Re"
  "qCreateTradingRoute\032\031.pb.RspCreateTradin"
  "gRoute\022J\n\022DeleteTradingRoute\022\031.pb.ReqDel"
  "eteTradingRoute\032\031.pb.RspDeleteTradingRou"
  "teb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_tahub_2eproto_deps[1] = {
  &::descriptor_table_trading_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_tahub_2eproto_sccs[12] = {
  &scc_info_ReqAddAccount_tahub_2eproto.base,
  &scc_info_ReqCreateTradingRoute_tahub_2eproto.base,
  &scc_info_ReqDeleteAccount_tahub_2eproto.base,
  &scc_info_ReqDeleteTradingRoute_tahub_2eproto.base,
  &scc_info_ReqGetAccountList_tahub_2eproto.base,
  &scc_info_ReqGetTradingRouteList_tahub_2eproto.base,
  &scc_info_RspAddAccount_tahub_2eproto.base,
  &scc_info_RspCreateTradingRoute_tahub_2eproto.base,
  &scc_info_RspDeleteAccount_tahub_2eproto.base,
  &scc_info_RspDeleteTradingRoute_tahub_2eproto.base,
  &scc_info_RspGetAccountList_tahub_2eproto.base,
  &scc_info_RspGetTradingRouteList_tahub_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_tahub_2eproto_once;
static bool descriptor_table_tahub_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_tahub_2eproto = {
  &descriptor_table_tahub_2eproto_initialized, descriptor_table_protodef_tahub_2eproto, "tahub.proto", 770,
  &descriptor_table_tahub_2eproto_once, descriptor_table_tahub_2eproto_sccs, descriptor_table_tahub_2eproto_deps, 12, 1,
  schemas, file_default_instances, TableStruct_tahub_2eproto::offsets,
  file_level_metadata_tahub_2eproto, 12, file_level_enum_descriptors_tahub_2eproto, file_level_service_descriptors_tahub_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_tahub_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_tahub_2eproto), true);
namespace pb {

// ===================================================================

void ReqGetAccountList::InitAsDefaultInstance() {
}
class ReqGetAccountList::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqGetAccountList::ReqGetAccountList()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ReqGetAccountList)
}
ReqGetAccountList::ReqGetAccountList(const ReqGetAccountList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.ReqGetAccountList)
}

void ReqGetAccountList::SharedCtor() {
}

ReqGetAccountList::~ReqGetAccountList() {
  // @@protoc_insertion_point(destructor:pb.ReqGetAccountList)
  SharedDtor();
}

void ReqGetAccountList::SharedDtor() {
}

void ReqGetAccountList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReqGetAccountList& ReqGetAccountList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReqGetAccountList_tahub_2eproto.base);
  return *internal_default_instance();
}


void ReqGetAccountList::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ReqGetAccountList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReqGetAccountList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReqGetAccountList::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.ReqGetAccountList)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.ReqGetAccountList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.ReqGetAccountList)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReqGetAccountList::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.ReqGetAccountList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.ReqGetAccountList)
}

::PROTOBUF_NAMESPACE_ID::uint8* ReqGetAccountList::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.ReqGetAccountList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.ReqGetAccountList)
  return target;
}

size_t ReqGetAccountList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ReqGetAccountList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqGetAccountList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ReqGetAccountList)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqGetAccountList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReqGetAccountList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ReqGetAccountList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ReqGetAccountList)
    MergeFrom(*source);
  }
}

void ReqGetAccountList::MergeFrom(const ReqGetAccountList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ReqGetAccountList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ReqGetAccountList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ReqGetAccountList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqGetAccountList::CopyFrom(const ReqGetAccountList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ReqGetAccountList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqGetAccountList::IsInitialized() const {
  return true;
}

void ReqGetAccountList::Swap(ReqGetAccountList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqGetAccountList::InternalSwap(ReqGetAccountList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqGetAccountList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RspGetAccountList::InitAsDefaultInstance() {
}
class RspGetAccountList::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspGetAccountList::RspGetAccountList()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RspGetAccountList)
}
RspGetAccountList::RspGetAccountList(const RspGetAccountList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.RspGetAccountList)
}

void RspGetAccountList::SharedCtor() {
}

RspGetAccountList::~RspGetAccountList() {
  // @@protoc_insertion_point(destructor:pb.RspGetAccountList)
  SharedDtor();
}

void RspGetAccountList::SharedDtor() {
}

void RspGetAccountList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RspGetAccountList& RspGetAccountList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RspGetAccountList_tahub_2eproto.base);
  return *internal_default_instance();
}


void RspGetAccountList::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RspGetAccountList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RspGetAccountList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RspGetAccountList::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RspGetAccountList)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RspGetAccountList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RspGetAccountList)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RspGetAccountList::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RspGetAccountList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RspGetAccountList)
}

::PROTOBUF_NAMESPACE_ID::uint8* RspGetAccountList::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.RspGetAccountList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RspGetAccountList)
  return target;
}

size_t RspGetAccountList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RspGetAccountList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspGetAccountList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RspGetAccountList)
  GOOGLE_DCHECK_NE(&from, this);
  const RspGetAccountList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RspGetAccountList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RspGetAccountList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RspGetAccountList)
    MergeFrom(*source);
  }
}

void RspGetAccountList::MergeFrom(const RspGetAccountList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RspGetAccountList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RspGetAccountList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RspGetAccountList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspGetAccountList::CopyFrom(const RspGetAccountList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RspGetAccountList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspGetAccountList::IsInitialized() const {
  return true;
}

void RspGetAccountList::Swap(RspGetAccountList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspGetAccountList::InternalSwap(RspGetAccountList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RspGetAccountList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReqAddAccount::InitAsDefaultInstance() {
}
class ReqAddAccount::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqAddAccount::ReqAddAccount()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ReqAddAccount)
}
ReqAddAccount::ReqAddAccount(const ReqAddAccount& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.ReqAddAccount)
}

void ReqAddAccount::SharedCtor() {
}

ReqAddAccount::~ReqAddAccount() {
  // @@protoc_insertion_point(destructor:pb.ReqAddAccount)
  SharedDtor();
}

void ReqAddAccount::SharedDtor() {
}

void ReqAddAccount::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReqAddAccount& ReqAddAccount::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReqAddAccount_tahub_2eproto.base);
  return *internal_default_instance();
}


void ReqAddAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ReqAddAccount)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReqAddAccount::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReqAddAccount::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.ReqAddAccount)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.ReqAddAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.ReqAddAccount)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReqAddAccount::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.ReqAddAccount)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.ReqAddAccount)
}

::PROTOBUF_NAMESPACE_ID::uint8* ReqAddAccount::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.ReqAddAccount)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.ReqAddAccount)
  return target;
}

size_t ReqAddAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ReqAddAccount)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqAddAccount::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ReqAddAccount)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqAddAccount* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReqAddAccount>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ReqAddAccount)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ReqAddAccount)
    MergeFrom(*source);
  }
}

void ReqAddAccount::MergeFrom(const ReqAddAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ReqAddAccount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ReqAddAccount::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ReqAddAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqAddAccount::CopyFrom(const ReqAddAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ReqAddAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqAddAccount::IsInitialized() const {
  return true;
}

void ReqAddAccount::Swap(ReqAddAccount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqAddAccount::InternalSwap(ReqAddAccount* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqAddAccount::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RspAddAccount::InitAsDefaultInstance() {
}
class RspAddAccount::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspAddAccount::RspAddAccount()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RspAddAccount)
}
RspAddAccount::RspAddAccount(const RspAddAccount& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.RspAddAccount)
}

void RspAddAccount::SharedCtor() {
}

RspAddAccount::~RspAddAccount() {
  // @@protoc_insertion_point(destructor:pb.RspAddAccount)
  SharedDtor();
}

void RspAddAccount::SharedDtor() {
}

void RspAddAccount::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RspAddAccount& RspAddAccount::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RspAddAccount_tahub_2eproto.base);
  return *internal_default_instance();
}


void RspAddAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RspAddAccount)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RspAddAccount::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RspAddAccount::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RspAddAccount)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RspAddAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RspAddAccount)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RspAddAccount::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RspAddAccount)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RspAddAccount)
}

::PROTOBUF_NAMESPACE_ID::uint8* RspAddAccount::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.RspAddAccount)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RspAddAccount)
  return target;
}

size_t RspAddAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RspAddAccount)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspAddAccount::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RspAddAccount)
  GOOGLE_DCHECK_NE(&from, this);
  const RspAddAccount* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RspAddAccount>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RspAddAccount)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RspAddAccount)
    MergeFrom(*source);
  }
}

void RspAddAccount::MergeFrom(const RspAddAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RspAddAccount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RspAddAccount::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RspAddAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspAddAccount::CopyFrom(const RspAddAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RspAddAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspAddAccount::IsInitialized() const {
  return true;
}

void RspAddAccount::Swap(RspAddAccount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspAddAccount::InternalSwap(RspAddAccount* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RspAddAccount::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReqDeleteAccount::InitAsDefaultInstance() {
}
class ReqDeleteAccount::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqDeleteAccount::ReqDeleteAccount()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ReqDeleteAccount)
}
ReqDeleteAccount::ReqDeleteAccount(const ReqDeleteAccount& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.ReqDeleteAccount)
}

void ReqDeleteAccount::SharedCtor() {
}

ReqDeleteAccount::~ReqDeleteAccount() {
  // @@protoc_insertion_point(destructor:pb.ReqDeleteAccount)
  SharedDtor();
}

void ReqDeleteAccount::SharedDtor() {
}

void ReqDeleteAccount::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReqDeleteAccount& ReqDeleteAccount::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReqDeleteAccount_tahub_2eproto.base);
  return *internal_default_instance();
}


void ReqDeleteAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ReqDeleteAccount)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReqDeleteAccount::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReqDeleteAccount::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.ReqDeleteAccount)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.ReqDeleteAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.ReqDeleteAccount)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReqDeleteAccount::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.ReqDeleteAccount)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.ReqDeleteAccount)
}

::PROTOBUF_NAMESPACE_ID::uint8* ReqDeleteAccount::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.ReqDeleteAccount)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.ReqDeleteAccount)
  return target;
}

size_t ReqDeleteAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ReqDeleteAccount)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqDeleteAccount::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ReqDeleteAccount)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqDeleteAccount* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReqDeleteAccount>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ReqDeleteAccount)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ReqDeleteAccount)
    MergeFrom(*source);
  }
}

void ReqDeleteAccount::MergeFrom(const ReqDeleteAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ReqDeleteAccount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ReqDeleteAccount::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ReqDeleteAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqDeleteAccount::CopyFrom(const ReqDeleteAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ReqDeleteAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqDeleteAccount::IsInitialized() const {
  return true;
}

void ReqDeleteAccount::Swap(ReqDeleteAccount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqDeleteAccount::InternalSwap(ReqDeleteAccount* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqDeleteAccount::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RspDeleteAccount::InitAsDefaultInstance() {
}
class RspDeleteAccount::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspDeleteAccount::RspDeleteAccount()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RspDeleteAccount)
}
RspDeleteAccount::RspDeleteAccount(const RspDeleteAccount& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.RspDeleteAccount)
}

void RspDeleteAccount::SharedCtor() {
}

RspDeleteAccount::~RspDeleteAccount() {
  // @@protoc_insertion_point(destructor:pb.RspDeleteAccount)
  SharedDtor();
}

void RspDeleteAccount::SharedDtor() {
}

void RspDeleteAccount::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RspDeleteAccount& RspDeleteAccount::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RspDeleteAccount_tahub_2eproto.base);
  return *internal_default_instance();
}


void RspDeleteAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RspDeleteAccount)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RspDeleteAccount::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RspDeleteAccount::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RspDeleteAccount)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RspDeleteAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RspDeleteAccount)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RspDeleteAccount::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RspDeleteAccount)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RspDeleteAccount)
}

::PROTOBUF_NAMESPACE_ID::uint8* RspDeleteAccount::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.RspDeleteAccount)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RspDeleteAccount)
  return target;
}

size_t RspDeleteAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RspDeleteAccount)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspDeleteAccount::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RspDeleteAccount)
  GOOGLE_DCHECK_NE(&from, this);
  const RspDeleteAccount* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RspDeleteAccount>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RspDeleteAccount)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RspDeleteAccount)
    MergeFrom(*source);
  }
}

void RspDeleteAccount::MergeFrom(const RspDeleteAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RspDeleteAccount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RspDeleteAccount::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RspDeleteAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspDeleteAccount::CopyFrom(const RspDeleteAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RspDeleteAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspDeleteAccount::IsInitialized() const {
  return true;
}

void RspDeleteAccount::Swap(RspDeleteAccount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspDeleteAccount::InternalSwap(RspDeleteAccount* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RspDeleteAccount::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReqGetTradingRouteList::InitAsDefaultInstance() {
}
class ReqGetTradingRouteList::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqGetTradingRouteList::ReqGetTradingRouteList()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ReqGetTradingRouteList)
}
ReqGetTradingRouteList::ReqGetTradingRouteList(const ReqGetTradingRouteList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.ReqGetTradingRouteList)
}

void ReqGetTradingRouteList::SharedCtor() {
}

ReqGetTradingRouteList::~ReqGetTradingRouteList() {
  // @@protoc_insertion_point(destructor:pb.ReqGetTradingRouteList)
  SharedDtor();
}

void ReqGetTradingRouteList::SharedDtor() {
}

void ReqGetTradingRouteList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReqGetTradingRouteList& ReqGetTradingRouteList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReqGetTradingRouteList_tahub_2eproto.base);
  return *internal_default_instance();
}


void ReqGetTradingRouteList::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ReqGetTradingRouteList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReqGetTradingRouteList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReqGetTradingRouteList::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.ReqGetTradingRouteList)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.ReqGetTradingRouteList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.ReqGetTradingRouteList)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReqGetTradingRouteList::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.ReqGetTradingRouteList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.ReqGetTradingRouteList)
}

::PROTOBUF_NAMESPACE_ID::uint8* ReqGetTradingRouteList::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.ReqGetTradingRouteList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.ReqGetTradingRouteList)
  return target;
}

size_t ReqGetTradingRouteList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ReqGetTradingRouteList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqGetTradingRouteList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ReqGetTradingRouteList)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqGetTradingRouteList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReqGetTradingRouteList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ReqGetTradingRouteList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ReqGetTradingRouteList)
    MergeFrom(*source);
  }
}

void ReqGetTradingRouteList::MergeFrom(const ReqGetTradingRouteList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ReqGetTradingRouteList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ReqGetTradingRouteList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ReqGetTradingRouteList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqGetTradingRouteList::CopyFrom(const ReqGetTradingRouteList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ReqGetTradingRouteList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqGetTradingRouteList::IsInitialized() const {
  return true;
}

void ReqGetTradingRouteList::Swap(ReqGetTradingRouteList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqGetTradingRouteList::InternalSwap(ReqGetTradingRouteList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqGetTradingRouteList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RspGetTradingRouteList::InitAsDefaultInstance() {
}
class RspGetTradingRouteList::HasBitSetters {
 public:
};

void RspGetTradingRouteList::clear_list() {
  list_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RspGetTradingRouteList::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspGetTradingRouteList::RspGetTradingRouteList()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RspGetTradingRouteList)
}
RspGetTradingRouteList::RspGetTradingRouteList(const RspGetTradingRouteList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      list_(from.list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.RspGetTradingRouteList)
}

void RspGetTradingRouteList::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RspGetTradingRouteList_tahub_2eproto.base);
}

RspGetTradingRouteList::~RspGetTradingRouteList() {
  // @@protoc_insertion_point(destructor:pb.RspGetTradingRouteList)
  SharedDtor();
}

void RspGetTradingRouteList::SharedDtor() {
}

void RspGetTradingRouteList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RspGetTradingRouteList& RspGetTradingRouteList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RspGetTradingRouteList_tahub_2eproto.base);
  return *internal_default_instance();
}


void RspGetTradingRouteList::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RspGetTradingRouteList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RspGetTradingRouteList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .pb.TradingRoute list = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RspGetTradingRouteList::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RspGetTradingRouteList)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.TradingRoute list = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RspGetTradingRouteList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RspGetTradingRouteList)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RspGetTradingRouteList::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RspGetTradingRouteList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.TradingRoute list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->list(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RspGetTradingRouteList)
}

::PROTOBUF_NAMESPACE_ID::uint8* RspGetTradingRouteList::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.RspGetTradingRouteList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.TradingRoute list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->list_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->list(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RspGetTradingRouteList)
  return target;
}

size_t RspGetTradingRouteList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RspGetTradingRouteList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb.TradingRoute list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->list(static_cast<int>(i)));
    }
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspGetTradingRouteList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RspGetTradingRouteList)
  GOOGLE_DCHECK_NE(&from, this);
  const RspGetTradingRouteList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RspGetTradingRouteList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RspGetTradingRouteList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RspGetTradingRouteList)
    MergeFrom(*source);
  }
}

void RspGetTradingRouteList::MergeFrom(const RspGetTradingRouteList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RspGetTradingRouteList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  list_.MergeFrom(from.list_);
}

void RspGetTradingRouteList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RspGetTradingRouteList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspGetTradingRouteList::CopyFrom(const RspGetTradingRouteList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RspGetTradingRouteList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspGetTradingRouteList::IsInitialized() const {
  return true;
}

void RspGetTradingRouteList::Swap(RspGetTradingRouteList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspGetTradingRouteList::InternalSwap(RspGetTradingRouteList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&list_)->InternalSwap(CastToBase(&other->list_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RspGetTradingRouteList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReqCreateTradingRoute::InitAsDefaultInstance() {
}
class ReqCreateTradingRoute::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqCreateTradingRoute::ReqCreateTradingRoute()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ReqCreateTradingRoute)
}
ReqCreateTradingRoute::ReqCreateTradingRoute(const ReqCreateTradingRoute& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.ReqCreateTradingRoute)
}

void ReqCreateTradingRoute::SharedCtor() {
}

ReqCreateTradingRoute::~ReqCreateTradingRoute() {
  // @@protoc_insertion_point(destructor:pb.ReqCreateTradingRoute)
  SharedDtor();
}

void ReqCreateTradingRoute::SharedDtor() {
}

void ReqCreateTradingRoute::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReqCreateTradingRoute& ReqCreateTradingRoute::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReqCreateTradingRoute_tahub_2eproto.base);
  return *internal_default_instance();
}


void ReqCreateTradingRoute::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ReqCreateTradingRoute)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReqCreateTradingRoute::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReqCreateTradingRoute::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.ReqCreateTradingRoute)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.ReqCreateTradingRoute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.ReqCreateTradingRoute)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReqCreateTradingRoute::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.ReqCreateTradingRoute)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.ReqCreateTradingRoute)
}

::PROTOBUF_NAMESPACE_ID::uint8* ReqCreateTradingRoute::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.ReqCreateTradingRoute)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.ReqCreateTradingRoute)
  return target;
}

size_t ReqCreateTradingRoute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ReqCreateTradingRoute)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqCreateTradingRoute::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ReqCreateTradingRoute)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqCreateTradingRoute* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReqCreateTradingRoute>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ReqCreateTradingRoute)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ReqCreateTradingRoute)
    MergeFrom(*source);
  }
}

void ReqCreateTradingRoute::MergeFrom(const ReqCreateTradingRoute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ReqCreateTradingRoute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ReqCreateTradingRoute::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ReqCreateTradingRoute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqCreateTradingRoute::CopyFrom(const ReqCreateTradingRoute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ReqCreateTradingRoute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqCreateTradingRoute::IsInitialized() const {
  return true;
}

void ReqCreateTradingRoute::Swap(ReqCreateTradingRoute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqCreateTradingRoute::InternalSwap(ReqCreateTradingRoute* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqCreateTradingRoute::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RspCreateTradingRoute::InitAsDefaultInstance() {
}
class RspCreateTradingRoute::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspCreateTradingRoute::RspCreateTradingRoute()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RspCreateTradingRoute)
}
RspCreateTradingRoute::RspCreateTradingRoute(const RspCreateTradingRoute& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.RspCreateTradingRoute)
}

void RspCreateTradingRoute::SharedCtor() {
}

RspCreateTradingRoute::~RspCreateTradingRoute() {
  // @@protoc_insertion_point(destructor:pb.RspCreateTradingRoute)
  SharedDtor();
}

void RspCreateTradingRoute::SharedDtor() {
}

void RspCreateTradingRoute::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RspCreateTradingRoute& RspCreateTradingRoute::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RspCreateTradingRoute_tahub_2eproto.base);
  return *internal_default_instance();
}


void RspCreateTradingRoute::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RspCreateTradingRoute)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RspCreateTradingRoute::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RspCreateTradingRoute::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RspCreateTradingRoute)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RspCreateTradingRoute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RspCreateTradingRoute)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RspCreateTradingRoute::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RspCreateTradingRoute)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RspCreateTradingRoute)
}

::PROTOBUF_NAMESPACE_ID::uint8* RspCreateTradingRoute::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.RspCreateTradingRoute)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RspCreateTradingRoute)
  return target;
}

size_t RspCreateTradingRoute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RspCreateTradingRoute)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspCreateTradingRoute::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RspCreateTradingRoute)
  GOOGLE_DCHECK_NE(&from, this);
  const RspCreateTradingRoute* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RspCreateTradingRoute>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RspCreateTradingRoute)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RspCreateTradingRoute)
    MergeFrom(*source);
  }
}

void RspCreateTradingRoute::MergeFrom(const RspCreateTradingRoute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RspCreateTradingRoute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RspCreateTradingRoute::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RspCreateTradingRoute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspCreateTradingRoute::CopyFrom(const RspCreateTradingRoute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RspCreateTradingRoute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspCreateTradingRoute::IsInitialized() const {
  return true;
}

void RspCreateTradingRoute::Swap(RspCreateTradingRoute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspCreateTradingRoute::InternalSwap(RspCreateTradingRoute* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RspCreateTradingRoute::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReqDeleteTradingRoute::InitAsDefaultInstance() {
}
class ReqDeleteTradingRoute::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqDeleteTradingRoute::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqDeleteTradingRoute::ReqDeleteTradingRoute()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ReqDeleteTradingRoute)
}
ReqDeleteTradingRoute::ReqDeleteTradingRoute(const ReqDeleteTradingRoute& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:pb.ReqDeleteTradingRoute)
}

void ReqDeleteTradingRoute::SharedCtor() {
  id_ = PROTOBUF_LONGLONG(0);
}

ReqDeleteTradingRoute::~ReqDeleteTradingRoute() {
  // @@protoc_insertion_point(destructor:pb.ReqDeleteTradingRoute)
  SharedDtor();
}

void ReqDeleteTradingRoute::SharedDtor() {
}

void ReqDeleteTradingRoute::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReqDeleteTradingRoute& ReqDeleteTradingRoute::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReqDeleteTradingRoute_tahub_2eproto.base);
  return *internal_default_instance();
}


void ReqDeleteTradingRoute::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ReqDeleteTradingRoute)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReqDeleteTradingRoute::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReqDeleteTradingRoute::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.ReqDeleteTradingRoute)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 id = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.ReqDeleteTradingRoute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.ReqDeleteTradingRoute)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReqDeleteTradingRoute::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.ReqDeleteTradingRoute)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.ReqDeleteTradingRoute)
}

::PROTOBUF_NAMESPACE_ID::uint8* ReqDeleteTradingRoute::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.ReqDeleteTradingRoute)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.ReqDeleteTradingRoute)
  return target;
}

size_t ReqDeleteTradingRoute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ReqDeleteTradingRoute)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->id());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReqDeleteTradingRoute::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ReqDeleteTradingRoute)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqDeleteTradingRoute* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReqDeleteTradingRoute>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ReqDeleteTradingRoute)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ReqDeleteTradingRoute)
    MergeFrom(*source);
  }
}

void ReqDeleteTradingRoute::MergeFrom(const ReqDeleteTradingRoute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ReqDeleteTradingRoute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
}

void ReqDeleteTradingRoute::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ReqDeleteTradingRoute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqDeleteTradingRoute::CopyFrom(const ReqDeleteTradingRoute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ReqDeleteTradingRoute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqDeleteTradingRoute::IsInitialized() const {
  return true;
}

void ReqDeleteTradingRoute::Swap(ReqDeleteTradingRoute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqDeleteTradingRoute::InternalSwap(ReqDeleteTradingRoute* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReqDeleteTradingRoute::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RspDeleteTradingRoute::InitAsDefaultInstance() {
}
class RspDeleteTradingRoute::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RspDeleteTradingRoute::RspDeleteTradingRoute()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RspDeleteTradingRoute)
}
RspDeleteTradingRoute::RspDeleteTradingRoute(const RspDeleteTradingRoute& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.RspDeleteTradingRoute)
}

void RspDeleteTradingRoute::SharedCtor() {
}

RspDeleteTradingRoute::~RspDeleteTradingRoute() {
  // @@protoc_insertion_point(destructor:pb.RspDeleteTradingRoute)
  SharedDtor();
}

void RspDeleteTradingRoute::SharedDtor() {
}

void RspDeleteTradingRoute::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RspDeleteTradingRoute& RspDeleteTradingRoute::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RspDeleteTradingRoute_tahub_2eproto.base);
  return *internal_default_instance();
}


void RspDeleteTradingRoute::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RspDeleteTradingRoute)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RspDeleteTradingRoute::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RspDeleteTradingRoute::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RspDeleteTradingRoute)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RspDeleteTradingRoute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RspDeleteTradingRoute)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RspDeleteTradingRoute::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RspDeleteTradingRoute)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RspDeleteTradingRoute)
}

::PROTOBUF_NAMESPACE_ID::uint8* RspDeleteTradingRoute::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.RspDeleteTradingRoute)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RspDeleteTradingRoute)
  return target;
}

size_t RspDeleteTradingRoute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RspDeleteTradingRoute)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RspDeleteTradingRoute::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RspDeleteTradingRoute)
  GOOGLE_DCHECK_NE(&from, this);
  const RspDeleteTradingRoute* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RspDeleteTradingRoute>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RspDeleteTradingRoute)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RspDeleteTradingRoute)
    MergeFrom(*source);
  }
}

void RspDeleteTradingRoute::MergeFrom(const RspDeleteTradingRoute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RspDeleteTradingRoute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RspDeleteTradingRoute::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RspDeleteTradingRoute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RspDeleteTradingRoute::CopyFrom(const RspDeleteTradingRoute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RspDeleteTradingRoute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RspDeleteTradingRoute::IsInitialized() const {
  return true;
}

void RspDeleteTradingRoute::Swap(RspDeleteTradingRoute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RspDeleteTradingRoute::InternalSwap(RspDeleteTradingRoute* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RspDeleteTradingRoute::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pb::ReqGetAccountList* Arena::CreateMaybeMessage< ::pb::ReqGetAccountList >(Arena* arena) {
  return Arena::CreateInternal< ::pb::ReqGetAccountList >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::RspGetAccountList* Arena::CreateMaybeMessage< ::pb::RspGetAccountList >(Arena* arena) {
  return Arena::CreateInternal< ::pb::RspGetAccountList >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::ReqAddAccount* Arena::CreateMaybeMessage< ::pb::ReqAddAccount >(Arena* arena) {
  return Arena::CreateInternal< ::pb::ReqAddAccount >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::RspAddAccount* Arena::CreateMaybeMessage< ::pb::RspAddAccount >(Arena* arena) {
  return Arena::CreateInternal< ::pb::RspAddAccount >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::ReqDeleteAccount* Arena::CreateMaybeMessage< ::pb::ReqDeleteAccount >(Arena* arena) {
  return Arena::CreateInternal< ::pb::ReqDeleteAccount >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::RspDeleteAccount* Arena::CreateMaybeMessage< ::pb::RspDeleteAccount >(Arena* arena) {
  return Arena::CreateInternal< ::pb::RspDeleteAccount >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::ReqGetTradingRouteList* Arena::CreateMaybeMessage< ::pb::ReqGetTradingRouteList >(Arena* arena) {
  return Arena::CreateInternal< ::pb::ReqGetTradingRouteList >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::RspGetTradingRouteList* Arena::CreateMaybeMessage< ::pb::RspGetTradingRouteList >(Arena* arena) {
  return Arena::CreateInternal< ::pb::RspGetTradingRouteList >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::ReqCreateTradingRoute* Arena::CreateMaybeMessage< ::pb::ReqCreateTradingRoute >(Arena* arena) {
  return Arena::CreateInternal< ::pb::ReqCreateTradingRoute >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::RspCreateTradingRoute* Arena::CreateMaybeMessage< ::pb::RspCreateTradingRoute >(Arena* arena) {
  return Arena::CreateInternal< ::pb::RspCreateTradingRoute >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::ReqDeleteTradingRoute* Arena::CreateMaybeMessage< ::pb::ReqDeleteTradingRoute >(Arena* arena) {
  return Arena::CreateInternal< ::pb::ReqDeleteTradingRoute >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::RspDeleteTradingRoute* Arena::CreateMaybeMessage< ::pb::RspDeleteTradingRoute >(Arena* arena) {
  return Arena::CreateInternal< ::pb::RspDeleteTradingRoute >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
