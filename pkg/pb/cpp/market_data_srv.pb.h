// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: market_data_srv.proto

#ifndef PROTOBUF_INCLUDED_market_5fdata_5fsrv_2eproto
#define PROTOBUF_INCLUDED_market_5fdata_5fsrv_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
#include "market_data.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_market_5fdata_5fsrv_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_market_5fdata_5fsrv_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_market_5fdata_5fsrv_2eproto();
namespace pb {
class ReqCombineSubscribe;
class ReqCombineSubscribeDefaultTypeInternal;
extern ReqCombineSubscribeDefaultTypeInternal _ReqCombineSubscribe_default_instance_;
class ReqSaveKline;
class ReqSaveKlineDefaultTypeInternal;
extern ReqSaveKlineDefaultTypeInternal _ReqSaveKline_default_instance_;
class RspCombineSubscribe;
class RspCombineSubscribeDefaultTypeInternal;
extern RspCombineSubscribeDefaultTypeInternal _RspCombineSubscribe_default_instance_;
class RspSaveKline;
class RspSaveKlineDefaultTypeInternal;
extern RspSaveKlineDefaultTypeInternal _RspSaveKline_default_instance_;
}  // namespace pb
namespace google {
namespace protobuf {
template<> ::pb::ReqCombineSubscribe* Arena::CreateMaybeMessage<::pb::ReqCombineSubscribe>(Arena*);
template<> ::pb::ReqSaveKline* Arena::CreateMaybeMessage<::pb::ReqSaveKline>(Arena*);
template<> ::pb::RspCombineSubscribe* Arena::CreateMaybeMessage<::pb::RspCombineSubscribe>(Arena*);
template<> ::pb::RspSaveKline* Arena::CreateMaybeMessage<::pb::RspSaveKline>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace pb {

// ===================================================================

class ReqSaveKline :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.ReqSaveKline) */ {
 public:
  ReqSaveKline();
  virtual ~ReqSaveKline();

  ReqSaveKline(const ReqSaveKline& from);

  inline ReqSaveKline& operator=(const ReqSaveKline& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReqSaveKline(ReqSaveKline&& from) noexcept
    : ReqSaveKline() {
    *this = ::std::move(from);
  }

  inline ReqSaveKline& operator=(ReqSaveKline&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ReqSaveKline& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReqSaveKline* internal_default_instance() {
    return reinterpret_cast<const ReqSaveKline*>(
               &_ReqSaveKline_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ReqSaveKline* other);
  friend void swap(ReqSaveKline& a, ReqSaveKline& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReqSaveKline* New() const final {
    return CreateMaybeMessage<ReqSaveKline>(nullptr);
  }

  ReqSaveKline* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReqSaveKline>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReqSaveKline& from);
  void MergeFrom(const ReqSaveKline& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReqSaveKline* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .pb.KlineSeries series = 1;
  bool has_series() const;
  void clear_series();
  static const int kSeriesFieldNumber = 1;
  const ::pb::KlineSeries& series() const;
  ::pb::KlineSeries* release_series();
  ::pb::KlineSeries* mutable_series();
  void set_allocated_series(::pb::KlineSeries* series);

  // @@protoc_insertion_point(class_scope:pb.ReqSaveKline)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::pb::KlineSeries* series_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_market_5fdata_5fsrv_2eproto;
};
// -------------------------------------------------------------------

class RspSaveKline :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.RspSaveKline) */ {
 public:
  RspSaveKline();
  virtual ~RspSaveKline();

  RspSaveKline(const RspSaveKline& from);

  inline RspSaveKline& operator=(const RspSaveKline& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RspSaveKline(RspSaveKline&& from) noexcept
    : RspSaveKline() {
    *this = ::std::move(from);
  }

  inline RspSaveKline& operator=(RspSaveKline&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RspSaveKline& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RspSaveKline* internal_default_instance() {
    return reinterpret_cast<const RspSaveKline*>(
               &_RspSaveKline_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(RspSaveKline* other);
  friend void swap(RspSaveKline& a, RspSaveKline& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RspSaveKline* New() const final {
    return CreateMaybeMessage<RspSaveKline>(nullptr);
  }

  RspSaveKline* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RspSaveKline>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RspSaveKline& from);
  void MergeFrom(const RspSaveKline& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RspSaveKline* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pb.RspSaveKline)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_market_5fdata_5fsrv_2eproto;
};
// -------------------------------------------------------------------

class ReqCombineSubscribe :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.ReqCombineSubscribe) */ {
 public:
  ReqCombineSubscribe();
  virtual ~ReqCombineSubscribe();

  ReqCombineSubscribe(const ReqCombineSubscribe& from);

  inline ReqCombineSubscribe& operator=(const ReqCombineSubscribe& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReqCombineSubscribe(ReqCombineSubscribe&& from) noexcept
    : ReqCombineSubscribe() {
    *this = ::std::move(from);
  }

  inline ReqCombineSubscribe& operator=(ReqCombineSubscribe&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ReqCombineSubscribe& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReqCombineSubscribe* internal_default_instance() {
    return reinterpret_cast<const ReqCombineSubscribe*>(
               &_ReqCombineSubscribe_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ReqCombineSubscribe* other);
  friend void swap(ReqCombineSubscribe& a, ReqCombineSubscribe& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReqCombineSubscribe* New() const final {
    return CreateMaybeMessage<ReqCombineSubscribe>(nullptr);
  }

  ReqCombineSubscribe* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReqCombineSubscribe>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReqCombineSubscribe& from);
  void MergeFrom(const ReqCombineSubscribe& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReqCombineSubscribe* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.PeriodType period_list = 2;
  int period_list_size() const;
  void clear_period_list();
  static const int kPeriodListFieldNumber = 2;
  ::pb::PeriodType period_list(int index) const;
  void set_period_list(int index, ::pb::PeriodType value);
  void add_period_list(::pb::PeriodType value);
  const ::google::protobuf::RepeatedField<int>& period_list() const;
  ::google::protobuf::RepeatedField<int>* mutable_period_list();

  // .pb.Symbol symbol = 1;
  bool has_symbol() const;
  void clear_symbol();
  static const int kSymbolFieldNumber = 1;
  const ::pb::Symbol& symbol() const;
  ::pb::Symbol* release_symbol();
  ::pb::Symbol* mutable_symbol();
  void set_allocated_symbol(::pb::Symbol* symbol);

  // @@protoc_insertion_point(class_scope:pb.ReqCombineSubscribe)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField<int> period_list_;
  mutable std::atomic<int> _period_list_cached_byte_size_;
  ::pb::Symbol* symbol_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_market_5fdata_5fsrv_2eproto;
};
// -------------------------------------------------------------------

class RspCombineSubscribe :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.RspCombineSubscribe) */ {
 public:
  RspCombineSubscribe();
  virtual ~RspCombineSubscribe();

  RspCombineSubscribe(const RspCombineSubscribe& from);

  inline RspCombineSubscribe& operator=(const RspCombineSubscribe& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RspCombineSubscribe(RspCombineSubscribe&& from) noexcept
    : RspCombineSubscribe() {
    *this = ::std::move(from);
  }

  inline RspCombineSubscribe& operator=(RspCombineSubscribe&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RspCombineSubscribe& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RspCombineSubscribe* internal_default_instance() {
    return reinterpret_cast<const RspCombineSubscribe*>(
               &_RspCombineSubscribe_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(RspCombineSubscribe* other);
  friend void swap(RspCombineSubscribe& a, RspCombineSubscribe& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RspCombineSubscribe* New() const final {
    return CreateMaybeMessage<RspCombineSubscribe>(nullptr);
  }

  RspCombineSubscribe* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RspCombineSubscribe>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RspCombineSubscribe& from);
  void MergeFrom(const RspCombineSubscribe& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RspCombineSubscribe* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.KlineSeries history = 2;
  int history_size() const;
  void clear_history();
  static const int kHistoryFieldNumber = 2;
  ::pb::KlineSeries* mutable_history(int index);
  ::google::protobuf::RepeatedPtrField< ::pb::KlineSeries >*
      mutable_history();
  const ::pb::KlineSeries& history(int index) const;
  ::pb::KlineSeries* add_history();
  const ::google::protobuf::RepeatedPtrField< ::pb::KlineSeries >&
      history() const;

  // repeated .pb.Kline klines = 4;
  int klines_size() const;
  void clear_klines();
  static const int kKlinesFieldNumber = 4;
  ::pb::Kline* mutable_klines(int index);
  ::google::protobuf::RepeatedPtrField< ::pb::Kline >*
      mutable_klines();
  const ::pb::Kline& klines(int index) const;
  ::pb::Kline* add_klines();
  const ::google::protobuf::RepeatedPtrField< ::pb::Kline >&
      klines() const;

  // .pb.Symbol symbol = 1;
  bool has_symbol() const;
  void clear_symbol();
  static const int kSymbolFieldNumber = 1;
  const ::pb::Symbol& symbol() const;
  ::pb::Symbol* release_symbol();
  ::pb::Symbol* mutable_symbol();
  void set_allocated_symbol(::pb::Symbol* symbol);

  // .pb.MarketDataSnapshot tick = 3;
  bool has_tick() const;
  void clear_tick();
  static const int kTickFieldNumber = 3;
  const ::pb::MarketDataSnapshot& tick() const;
  ::pb::MarketDataSnapshot* release_tick();
  ::pb::MarketDataSnapshot* mutable_tick();
  void set_allocated_tick(::pb::MarketDataSnapshot* tick);

  // @@protoc_insertion_point(class_scope:pb.RspCombineSubscribe)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::pb::KlineSeries > history_;
  ::google::protobuf::RepeatedPtrField< ::pb::Kline > klines_;
  ::pb::Symbol* symbol_;
  ::pb::MarketDataSnapshot* tick_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_market_5fdata_5fsrv_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ReqSaveKline

// .pb.KlineSeries series = 1;
inline bool ReqSaveKline::has_series() const {
  return this != internal_default_instance() && series_ != nullptr;
}
inline const ::pb::KlineSeries& ReqSaveKline::series() const {
  const ::pb::KlineSeries* p = series_;
  // @@protoc_insertion_point(field_get:pb.ReqSaveKline.series)
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::KlineSeries*>(
      &::pb::_KlineSeries_default_instance_);
}
inline ::pb::KlineSeries* ReqSaveKline::release_series() {
  // @@protoc_insertion_point(field_release:pb.ReqSaveKline.series)
  
  ::pb::KlineSeries* temp = series_;
  series_ = nullptr;
  return temp;
}
inline ::pb::KlineSeries* ReqSaveKline::mutable_series() {
  
  if (series_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::KlineSeries>(GetArenaNoVirtual());
    series_ = p;
  }
  // @@protoc_insertion_point(field_mutable:pb.ReqSaveKline.series)
  return series_;
}
inline void ReqSaveKline::set_allocated_series(::pb::KlineSeries* series) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(series_);
  }
  if (series) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      series = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, series, submessage_arena);
    }
    
  } else {
    
  }
  series_ = series;
  // @@protoc_insertion_point(field_set_allocated:pb.ReqSaveKline.series)
}

// -------------------------------------------------------------------

// RspSaveKline

// -------------------------------------------------------------------

// ReqCombineSubscribe

// .pb.Symbol symbol = 1;
inline bool ReqCombineSubscribe::has_symbol() const {
  return this != internal_default_instance() && symbol_ != nullptr;
}
inline const ::pb::Symbol& ReqCombineSubscribe::symbol() const {
  const ::pb::Symbol* p = symbol_;
  // @@protoc_insertion_point(field_get:pb.ReqCombineSubscribe.symbol)
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::Symbol*>(
      &::pb::_Symbol_default_instance_);
}
inline ::pb::Symbol* ReqCombineSubscribe::release_symbol() {
  // @@protoc_insertion_point(field_release:pb.ReqCombineSubscribe.symbol)
  
  ::pb::Symbol* temp = symbol_;
  symbol_ = nullptr;
  return temp;
}
inline ::pb::Symbol* ReqCombineSubscribe::mutable_symbol() {
  
  if (symbol_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::Symbol>(GetArenaNoVirtual());
    symbol_ = p;
  }
  // @@protoc_insertion_point(field_mutable:pb.ReqCombineSubscribe.symbol)
  return symbol_;
}
inline void ReqCombineSubscribe::set_allocated_symbol(::pb::Symbol* symbol) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(symbol_);
  }
  if (symbol) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      symbol = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, symbol, submessage_arena);
    }
    
  } else {
    
  }
  symbol_ = symbol;
  // @@protoc_insertion_point(field_set_allocated:pb.ReqCombineSubscribe.symbol)
}

// repeated .pb.PeriodType period_list = 2;
inline int ReqCombineSubscribe::period_list_size() const {
  return period_list_.size();
}
inline void ReqCombineSubscribe::clear_period_list() {
  period_list_.Clear();
}
inline ::pb::PeriodType ReqCombineSubscribe::period_list(int index) const {
  // @@protoc_insertion_point(field_get:pb.ReqCombineSubscribe.period_list)
  return static_cast< ::pb::PeriodType >(period_list_.Get(index));
}
inline void ReqCombineSubscribe::set_period_list(int index, ::pb::PeriodType value) {
  period_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:pb.ReqCombineSubscribe.period_list)
}
inline void ReqCombineSubscribe::add_period_list(::pb::PeriodType value) {
  period_list_.Add(value);
  // @@protoc_insertion_point(field_add:pb.ReqCombineSubscribe.period_list)
}
inline const ::google::protobuf::RepeatedField<int>&
ReqCombineSubscribe::period_list() const {
  // @@protoc_insertion_point(field_list:pb.ReqCombineSubscribe.period_list)
  return period_list_;
}
inline ::google::protobuf::RepeatedField<int>*
ReqCombineSubscribe::mutable_period_list() {
  // @@protoc_insertion_point(field_mutable_list:pb.ReqCombineSubscribe.period_list)
  return &period_list_;
}

// -------------------------------------------------------------------

// RspCombineSubscribe

// .pb.Symbol symbol = 1;
inline bool RspCombineSubscribe::has_symbol() const {
  return this != internal_default_instance() && symbol_ != nullptr;
}
inline const ::pb::Symbol& RspCombineSubscribe::symbol() const {
  const ::pb::Symbol* p = symbol_;
  // @@protoc_insertion_point(field_get:pb.RspCombineSubscribe.symbol)
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::Symbol*>(
      &::pb::_Symbol_default_instance_);
}
inline ::pb::Symbol* RspCombineSubscribe::release_symbol() {
  // @@protoc_insertion_point(field_release:pb.RspCombineSubscribe.symbol)
  
  ::pb::Symbol* temp = symbol_;
  symbol_ = nullptr;
  return temp;
}
inline ::pb::Symbol* RspCombineSubscribe::mutable_symbol() {
  
  if (symbol_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::Symbol>(GetArenaNoVirtual());
    symbol_ = p;
  }
  // @@protoc_insertion_point(field_mutable:pb.RspCombineSubscribe.symbol)
  return symbol_;
}
inline void RspCombineSubscribe::set_allocated_symbol(::pb::Symbol* symbol) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(symbol_);
  }
  if (symbol) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      symbol = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, symbol, submessage_arena);
    }
    
  } else {
    
  }
  symbol_ = symbol;
  // @@protoc_insertion_point(field_set_allocated:pb.RspCombineSubscribe.symbol)
}

// repeated .pb.KlineSeries history = 2;
inline int RspCombineSubscribe::history_size() const {
  return history_.size();
}
inline ::pb::KlineSeries* RspCombineSubscribe::mutable_history(int index) {
  // @@protoc_insertion_point(field_mutable:pb.RspCombineSubscribe.history)
  return history_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::pb::KlineSeries >*
RspCombineSubscribe::mutable_history() {
  // @@protoc_insertion_point(field_mutable_list:pb.RspCombineSubscribe.history)
  return &history_;
}
inline const ::pb::KlineSeries& RspCombineSubscribe::history(int index) const {
  // @@protoc_insertion_point(field_get:pb.RspCombineSubscribe.history)
  return history_.Get(index);
}
inline ::pb::KlineSeries* RspCombineSubscribe::add_history() {
  // @@protoc_insertion_point(field_add:pb.RspCombineSubscribe.history)
  return history_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::KlineSeries >&
RspCombineSubscribe::history() const {
  // @@protoc_insertion_point(field_list:pb.RspCombineSubscribe.history)
  return history_;
}

// .pb.MarketDataSnapshot tick = 3;
inline bool RspCombineSubscribe::has_tick() const {
  return this != internal_default_instance() && tick_ != nullptr;
}
inline const ::pb::MarketDataSnapshot& RspCombineSubscribe::tick() const {
  const ::pb::MarketDataSnapshot* p = tick_;
  // @@protoc_insertion_point(field_get:pb.RspCombineSubscribe.tick)
  return p != nullptr ? *p : *reinterpret_cast<const ::pb::MarketDataSnapshot*>(
      &::pb::_MarketDataSnapshot_default_instance_);
}
inline ::pb::MarketDataSnapshot* RspCombineSubscribe::release_tick() {
  // @@protoc_insertion_point(field_release:pb.RspCombineSubscribe.tick)
  
  ::pb::MarketDataSnapshot* temp = tick_;
  tick_ = nullptr;
  return temp;
}
inline ::pb::MarketDataSnapshot* RspCombineSubscribe::mutable_tick() {
  
  if (tick_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb::MarketDataSnapshot>(GetArenaNoVirtual());
    tick_ = p;
  }
  // @@protoc_insertion_point(field_mutable:pb.RspCombineSubscribe.tick)
  return tick_;
}
inline void RspCombineSubscribe::set_allocated_tick(::pb::MarketDataSnapshot* tick) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tick_);
  }
  if (tick) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      tick = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tick, submessage_arena);
    }
    
  } else {
    
  }
  tick_ = tick;
  // @@protoc_insertion_point(field_set_allocated:pb.RspCombineSubscribe.tick)
}

// repeated .pb.Kline klines = 4;
inline int RspCombineSubscribe::klines_size() const {
  return klines_.size();
}
inline ::pb::Kline* RspCombineSubscribe::mutable_klines(int index) {
  // @@protoc_insertion_point(field_mutable:pb.RspCombineSubscribe.klines)
  return klines_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::pb::Kline >*
RspCombineSubscribe::mutable_klines() {
  // @@protoc_insertion_point(field_mutable_list:pb.RspCombineSubscribe.klines)
  return &klines_;
}
inline const ::pb::Kline& RspCombineSubscribe::klines(int index) const {
  // @@protoc_insertion_point(field_get:pb.RspCombineSubscribe.klines)
  return klines_.Get(index);
}
inline ::pb::Kline* RspCombineSubscribe::add_klines() {
  // @@protoc_insertion_point(field_add:pb.RspCombineSubscribe.klines)
  return klines_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::Kline >&
RspCombineSubscribe::klines() const {
  // @@protoc_insertion_point(field_list:pb.RspCombineSubscribe.klines)
  return klines_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_market_5fdata_5fsrv_2eproto
